{"ast":null,"code":"var _jsxFileName = \"D:\\\\fashion-shirt-shop\\\\DATN\\\\src\\\\main\\\\resources\\\\templates\\\\fashionshop-ui\\\\src\\\\layouts\\\\SanPham\\\\themsp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Button from \"@mui/material/Button\";\nimport Input from \"@mui/material/Input\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport SoftBox from \"components/SoftBox\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\nimport Footer from \"examples/Footer\";\nimport Icon from \"@mui/material/Icon\";\nimport Table from \"examples/Tables/Table\";\nimport { CircularProgress, Grid, Tooltip, Typography, Box } from \"@mui/material\";\nimport CreatableSelect from \"react-select/creatable\";\nimport Select from \"react-select\";\nimport { FaPlus, FaTrash } from \"react-icons/fa\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:8080\";\nconst apiUrl = path => `${API_BASE}${path.startsWith(\"/\") ? \"\" : \"/\"}${path}`;\nconst normalizeUrl = url => url && url.startsWith(\"http\") ? url : `${API_BASE}${url !== null && url !== void 0 && url.startsWith(\"/\") ? \"\" : \"/\"}${url || \"\"}`;\nasync function generateMaSanPhamUnique() {\n  try {\n    const res = await fetch(apiUrl(\"/sanPham/all-ma\"));\n    const data = await res.json();\n    if (!Array.isArray(data)) {\n      return \"SP0001\";\n    }\n    const numbers = data.map(ma => {\n      const match = /^SP(\\d{4})$/.exec(ma);\n      return match ? parseInt(match[1], 10) : null;\n    }).filter(num => num !== null).sort((a, b) => a - b);\n    let next = 1;\n    for (let i = 0; i < numbers.length; i++) {\n      if (numbers[i] !== i + 1) {\n        next = i + 1;\n        break;\n      }\n      next = numbers.length + 1;\n    }\n    return \"SP\" + String(next).padStart(4, \"0\");\n  } catch {\n    return \"SP0001\";\n  }\n}\nasync function fetchAllMaSanPhamChiTiet() {\n  try {\n    const res = await fetch(apiUrl(\"/chiTietSanPham/all-ma\"));\n    const data = await res.json();\n    if (!Array.isArray(data)) return [];\n    return data;\n  } catch {\n    return [];\n  }\n}\nfunction getUniqueMaSanPhamChiTiet(maSanPhamBase, colorId, sizeId, existedList) {\n  let idx = 1;\n  let ma = `${maSanPhamBase}-${colorId}-${sizeId}`;\n  while (existedList.includes(ma)) {\n    idx += 1;\n    ma = `${maSanPhamBase}-${colorId}-${sizeId}-${idx}`;\n  }\n  existedList.push(ma);\n  return ma;\n}\nfunction getProductVariantsByColors(colors, sizes, productName) {\n  const selectedColors = colors.filter(Boolean);\n  const selectedSizes = sizes.filter(Boolean);\n  if (!selectedColors.length || !selectedSizes.length) return [];\n  return selectedColors.map(colorId => ({\n    colorId: colorId,\n    products: selectedSizes.map(sizeId => ({\n      name: productName,\n      sizeId: sizeId,\n      weight: \"\",\n      qty: \"\",\n      price: \"\",\n      unit: \"g\",\n      image: \"\"\n    }))\n  }));\n}\nconst getLabelById = (options, id) => {\n  var _options$find;\n  return ((_options$find = options.find(option => `${option.value}` === `${id}`)) === null || _options$find === void 0 ? void 0 : _options$find.label) || id;\n};\nconst selectMenuStyle = {\n  menu: base => ({\n    ...base,\n    borderRadius: 8,\n    marginTop: 2,\n    boxShadow: \"0 8px 24px 0 rgba(34,82,168,0.11)\",\n    border: \"1px solid #bbdefb\",\n    background: \"#fff\",\n    color: \"#263238\",\n    zIndex: 20\n  }),\n  input: (base, state) => ({\n    ...base,\n    color: \"#263238\",\n    fontSize: 16,\n    background: \"transparent\",\n    opacity: state.isFocused ? 0.5 : 1\n  }),\n  placeholder: (base, state) => ({\n    ...base,\n    color: \"#a8b8c3\",\n    fontSize: 16,\n    opacity: state.isFocused ? 0.4 : 1\n  }),\n  option: (base, state) => ({\n    ...base,\n    backgroundColor: state.isSelected ? \"#e3f2fd\" : state.isFocused ? \"#f0f6fd\" : \"#fff\",\n    color: \"#263238\",\n    fontWeight: state.isSelected ? 600 : 400,\n    cursor: \"pointer\",\n    fontSize: 16,\n    padding: \"10px 16px\"\n  })\n};\nfunction formatCurrencyVND(value) {\n  const number = Number(String(value).replace(/[^\\d]/g, \"\"));\n  if (Number.isNaN(number) || value === \"\") return \"\";\n  return number.toLocaleString(\"vi-VN\");\n}\nfunction parseCurrencyVND(value) {\n  return String(value).replace(/[^\\d]/g, \"\");\n}\nfunction ProductForm() {\n  _s();\n  const [productCode, setProductCode] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [productNameOptions, setProductNameOptions] = useState([]);\n  const [productDesc, setProductDesc] = useState(\"\");\n  const [categoryOptions, setCategoryOptions] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"\");\n  const [brandOptions, setBrandOptions] = useState([]);\n  const [selectedBrand, setSelectedBrand] = useState(\"\");\n  const [materialOptions, setMaterialOptions] = useState([]);\n  const [selectedMaterial, setSelectedMaterial] = useState(\"\");\n  const [countryOptions, setCountryOptions] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [collarOptions, setCollarOptions] = useState([]);\n  const [selectedCollar, setSelectedCollar] = useState(\"\");\n  const [sleeveOptions, setSleeveOptions] = useState([]);\n  const [selectedSleeve, setSelectedSleeve] = useState(\"\");\n  const [colorOptions, setColorOptions] = useState([]);\n  const [colors, setColors] = useState([]);\n  const [sizeOptions, setSizeOptions] = useState([]);\n  const [sizes, setSizes] = useState([]);\n  const [showImageModal, setShowImageModal] = useState(false);\n  const [modalColor, setModalColor] = useState(\"\");\n  const [selectedImages, setSelectedImages] = useState({});\n  const [tempImages, setTempImages] = useState([]);\n  const [imageOptions, setImageOptions] = useState([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [productVariants, setProductVariants] = useState([]);\n  const [createdSanPhamId, setCreatedSanPhamId] = useState(null);\n  const [checkedRows, setCheckedRows] = useState({});\n  const [quickWeight, setQuickWeight] = useState({});\n  const [quickQty, setQuickQty] = useState({});\n  const [quickPrice, setQuickPrice] = useState({});\n  const [showAddProductModal, setShowAddProductModal] = useState(false);\n  const [newProductName, setNewProductName] = useState(\"\");\n  const [newProductCategory, setNewProductCategory] = useState(\"\");\n  const [newProductDesc, setNewProductDesc] = useState(\"\");\n  const [addProductLoading, setAddProductLoading] = useState(false);\n  const [addError, setAddError] = useState(\"\"); // SỬA: THÊM KHAI BÁO useState CHO addError\n  const [addSuccess, setAddSuccess] = useState(\"\");\n  const autoFocusRef = useRef(null);\n  const [newProductCountry, setNewProductCountry] = useState(\"\");\n  const [addProductValidate, setAddProductValidate] = useState({});\n  const [isCheckedAllGlobal, setIsCheckedAllGlobal] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (showAddProductModal && autoFocusRef.current) {\n      autoFocusRef.current.focus();\n    }\n  }, [showAddProductModal]);\n  useEffect(() => {\n    fetch(apiUrl(\"/danhMuc/all\")).then(res => res.json()).then(data => {\n      const opts = Array.isArray(data) ? data.sort((a, b) => b.id - a.id).map(item => ({\n        value: item.id,\n        label: item.tenDanhMuc ? item.tenDanhMuc : item\n      })) : [];\n      setCategoryOptions(opts);\n      if (opts[0]) setSelectedCategory(opts[0].value);\n    }).catch(() => setCategoryOptions([]));\n  }, []);\n  useEffect(() => {\n    fetch(apiUrl(\"/thuongHieu/all\")).then(res => res.json()).then(data => {\n      const opts = Array.isArray(data) ? data.sort((a, b) => b.id - a.id).map(item => ({\n        value: item.id,\n        label: item.tenThuongHieu ? item.tenThuongHieu : item\n      })) : [];\n      setBrandOptions(opts);\n      if (opts[0]) setSelectedBrand(opts[0].value);\n    }).catch(() => setBrandOptions([]));\n  }, []);\n  useEffect(() => {\n    fetch(apiUrl(\"/chatLieu/all\")).then(res => res.json()).then(data => {\n      let opts = [];\n      if (Array.isArray(data)) {\n        if (typeof data[0] === \"string\") {\n          opts = [...data].reverse().map((name, idx) => ({\n            value: idx + 1,\n            label: name\n          }));\n        } else {\n          opts = data.sort((a, b) => b.id - a.id).map(item => ({\n            value: item.id,\n            label: item.tenChatLieu ? item.tenChatLieu : item\n          }));\n        }\n      }\n      setMaterialOptions(opts);\n      if (opts[0]) setSelectedMaterial(opts[0].value);\n    }).catch(() => setMaterialOptions([]));\n  }, []);\n  useEffect(() => {\n    fetch(apiUrl(\"/xuatXu/quocGia\")).then(res => res.json()).then(data => {\n      const opts = Array.isArray(data) ? data.map((item, idx) => ({\n        value: item.name ? item.name : item ? item : idx,\n        label: item.name ? item.name : item\n      })) : [];\n      setCountryOptions(opts);\n      if (opts[0]) setSelectedCountry(opts[0].value);\n    }).catch(() => setCountryOptions([]));\n  }, []);\n  useEffect(() => {\n    fetch(apiUrl(\"/coAo/all\")).then(res => res.json()).then(data => {\n      const opts = Array.isArray(data) ? data.sort((a, b) => typeof a.id === \"number\" && typeof b.id === \"number\" ? b.id - a.id : 0).map(item => typeof item === \"string\" ? {\n        value: item,\n        label: item\n      } : {\n        value: item.id,\n        label: item.tenCoAo ? item.tenCoAo : item.label ? item.label : item\n      }) : [];\n      setCollarOptions(opts);\n      if (opts[0]) setSelectedCollar(opts[0].value);\n    }).catch(() => setCollarOptions([]));\n  }, []);\n  useEffect(() => {\n    fetch(apiUrl(\"/tayAo/all\")).then(res => res.json()).then(data => {\n      const opts = Array.isArray(data) ? data.sort((a, b) => typeof a.id === \"number\" && typeof b.id === \"number\" ? b.id - a.id : 0).map(item => typeof item === \"string\" ? {\n        value: item,\n        label: item\n      } : {\n        value: item.id,\n        label: item.tenTayAo ? item.tenTayAo : item.label ? item.label : item\n      }) : [];\n      setSleeveOptions(opts);\n      if (opts[0]) setSelectedSleeve(opts[0].value);\n    }).catch(() => setSleeveOptions([]));\n  }, []);\n  useEffect(() => {\n    fetch(apiUrl(\"/mauSac/all\")).then(res => res.json()).then(data => setColorOptions(Array.isArray(data) ? data.sort((a, b) => b.id - a.id).map(item => ({\n      value: item.id,\n      label: item.tenMauSac\n    })) : [])).catch(() => setColorOptions([]));\n    fetch(apiUrl(\"/kichThuoc/all\")).then(res => res.json()).then(data => setSizeOptions(Array.isArray(data) ? data.sort((a, b) => typeof a.id === \"number\" && typeof b.id === \"number\" ? b.id - a.id : 0).map(item => typeof item === \"string\" ? {\n      value: item,\n      label: item\n    } : {\n      value: item.id,\n      label: item.tenKichCo ? item.tenKichCo : item.label ? item.label : item\n    }) : [])).catch(() => setSizeOptions([]));\n    fetch(apiUrl(\"/hinhAnh/all\")).then(res => res.json()).then(data => setImageOptions(Array.isArray(data) ? data.sort((a, b) => b.id - a.id).map(item => ({\n      value: item.id,\n      label: item.moTa ? item.moTa : `Ảnh ${item.id}`,\n      url: normalizeUrl(item.duongDanAnh)\n    })) : [])).catch(() => setImageOptions([]));\n    fetch(apiUrl(\"/sanPham/all-ten\")).then(res => res.json()).then(data => {\n      const uniqueNames = Array.isArray(data) ? data.filter(Boolean).map(name => name.trim()) : [];\n      const opts = uniqueNames.map(name => ({\n        value: name,\n        label: name\n      }));\n      setProductNameOptions(opts);\n      if (opts[0]) setProductName(opts[0].value);\n    }).catch(() => setProductNameOptions([]));\n  }, []);\n  useEffect(() => {\n    setProductVariants(getProductVariantsByColors(colors, sizes, productName));\n  }, [JSON.stringify(colors), JSON.stringify(sizes), productName]);\n  useEffect(() => {\n    generateMaSanPhamUnique().then(setProductCode);\n  }, []);\n  useEffect(() => {\n    if (productName) {\n      fetch(apiUrl(`/sanPham/search?keyword=${encodeURIComponent(productName)}`)).then(res => res.json()).then(async data => {\n        if (Array.isArray(data) && data.length > 0) {\n          const prod = data[0];\n          setCreatedSanPhamId(prod.id);\n          setProductDesc(prod.moTa ? prod.moTa : \"\");\n          setSelectedCategory(prod.idDanhMuc ? prod.idDanhMuc : \"\");\n          setSelectedCountry(prod.xuatXu ? prod.xuatXu : \"\");\n          setProductCode(prod.maSanPham ? prod.maSanPham : await generateMaSanPhamUnique());\n        } else {\n          var _categoryOptions$, _countryOptions$;\n          setCreatedSanPhamId(null);\n          setProductDesc(\"\");\n          setSelectedCategory(((_categoryOptions$ = categoryOptions[0]) === null || _categoryOptions$ === void 0 ? void 0 : _categoryOptions$.value) || \"\");\n          setSelectedCountry(((_countryOptions$ = countryOptions[0]) === null || _countryOptions$ === void 0 ? void 0 : _countryOptions$.value) || \"\");\n          setProductCode(await generateMaSanPhamUnique());\n        }\n      });\n    }\n  }, [productName]);\n  const handleProductNameChange = opt => {\n    const name = opt ? opt.value : \"\";\n    setProductName(name);\n  };\n  const handleVariantValueChange = (colorIdx, prodIdx, field, value) => {\n    setProductVariants(prev => {\n      const newArr = [...prev];\n      newArr[colorIdx] = {\n        ...newArr[colorIdx],\n        products: newArr[colorIdx].products.map((p, idx) => idx === prodIdx ? field === \"price\" ? {\n          ...p,\n          price: parseCurrencyVND(value)\n        } : {\n          ...p,\n          [field]: value\n        } : p)\n      };\n      return newArr;\n    });\n  };\n  const handleCheckRow = (colorIdx, prodIdx) => {\n    setCheckedRows(prev => {\n      const list = prev[colorIdx] || [];\n      if (list.includes(prodIdx)) {\n        return {\n          ...prev,\n          [colorIdx]: list.filter(i => i !== prodIdx)\n        };\n      }\n      return {\n        ...prev,\n        [colorIdx]: [...list, prodIdx]\n      };\n    });\n  };\n  const handleCheckAllRowsGlobal = checked => {\n    setIsCheckedAllGlobal(checked);\n    if (checked) {\n      const checkedAllRows = {};\n      productVariants.forEach((variant, colorIdx) => {\n        checkedAllRows[colorIdx] = variant.products.map((_, prodIdx) => prodIdx);\n      });\n      setCheckedRows(checkedAllRows);\n    } else {\n      setCheckedRows({});\n      setQuickWeight({});\n      setQuickQty({});\n      setQuickPrice({});\n    }\n  };\n  useEffect(() => {\n    if (isCheckedAllGlobal) {\n      setProductVariants(prev => prev.map(variant => ({\n        ...variant,\n        products: variant.products.map(prod => ({\n          ...prod,\n          weight: quickWeight.global,\n          qty: quickQty.global,\n          price: quickPrice.global\n        }))\n      })));\n    }\n  }, [quickWeight.global, quickQty.global, quickPrice.global, isCheckedAllGlobal]);\n  const openImageModal = colorId => {\n    setModalColor(\"all\");\n    setShowImageModal(true);\n    setTempImages(Object.values(selectedImages).flat());\n  };\n  const closeImageModal = () => setShowImageModal(false);\n  const handleSaveImages = () => {\n    // Lưu ảnh chọn dùng chung cho tất cả sản phẩm chi tiết các màu\n    setSelectedImages({\n      all: [...tempImages]\n    });\n    closeImageModal();\n  };\n  const toggleTempImage = imgId => {\n    setTempImages(sel => sel.includes(imgId) ? sel.filter(id => id !== imgId) : [...sel, imgId]);\n  };\n  const findId = (arr, value) => {\n    const item = arr.find(x => `${x.value}` === `${value}` || x.label === value);\n    return item ? item.value : null;\n  };\n  const handleAddProduct = async e => {\n    e.preventDefault();\n    setAddError(\"\"); // SỬA: ĐỔI TỪ setAddProductError thành setAddError nếu đang dùng addError\n    setAddSuccess(\"\");\n    setAddLoading(true);\n    const errors = {};\n    if (!productName || !productName.trim()) errors.productName = \"Tên sản phẩm không được để trống\";\n    if (!selectedBrand) errors.selectedBrand = \"Thương hiệu không được để trống\";\n    if (!selectedMaterial) errors.selectedMaterial = \"Chất liệu không được để trống\";\n    if (!selectedCollar) errors.selectedCollar = \"Cổ áo không được để trống\";\n    if (!selectedSleeve) errors.selectedSleeve = \"Tay áo không được để trống\";\n    if (!colors.length) errors.colors = \"Màu sắc không được để trống\";\n    if (!sizes.length) errors.sizes = \"Kích thước không được để trống\";\n    if (!selectedCategory) errors.selectedCategory = \"Danh mục không được để trống\";\n    if (!selectedCountry) errors.selectedCountry = \"Xuất xứ không được để trống\";\n    if (Object.keys(errors).length > 0) {\n      setAddProductValidate(errors);\n      setAddLoading(false);\n      toast.error(Object.values(errors)[0]);\n      return;\n    }\n    if (createdSanPhamId) {\n      setAddSuccess(\"Chọn sản phẩm thành công!\");\n      setShowAttributes(true);\n      setAddLoading(false);\n      toast.success(\"Chọn sản phẩm thành công!\");\n      return;\n    }\n    const data = {\n      maSanPham: productCode,\n      tenSanPham: productName,\n      xuatXu: selectedCountry,\n      trangThai: 1,\n      idDanhMuc: selectedCategory\n    };\n    try {\n      const res = await fetch(apiUrl(\"/sanPham\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n      });\n      if (!res.ok) throw new Error(\"Lỗi khi thêm sản phẩm\");\n      const result = await res.json();\n      setCreatedSanPhamId(result.id ? result.id : result);\n      setAddSuccess(\"Thêm sản phẩm thành công!\");\n      setShowAttributes(true);\n      toast.success(\"Thêm sản phẩm thành công!\");\n    } catch (err) {\n      setAddError(\"Thêm sản phẩm thất bại!\");\n      toast.error(\"Thêm sản phẩm thất bại!\");\n    }\n    setAddLoading(false);\n  };\n  const handleAddProductDetail = async () => {\n    setAddError(\"\");\n    setAddSuccess(\"\");\n    setAddLoading(true);\n    const errors = {};\n    if (!productName || !productName.trim()) errors.productName = \"Tên sản phẩm không được để trống\";\n    if (!selectedMaterial) errors.selectedMaterial = \"Chất liệu không được để trống\";\n    if (!selectedBrand) errors.selectedBrand = \"Thương hiệu không được để trống\";\n    if (!colors.length) errors.colors = \"Màu sắc không được để trống\";\n    if (!sizes.length) errors.sizes = \"Kích thước không được để trống\";\n    if (!selectedCollar) errors.selectedCollar = \"Cổ áo không được để trống\";\n    if (!selectedSleeve) errors.selectedSleeve = \"Tay áo không được để trống\";\n    for (let variant of productVariants) {\n      for (let prod of variant.products) {\n        if (!prod.weight || isNaN(prod.weight) || Number(prod.weight) <= 0) {\n          errors.weight = \"Trọng lượng phải lớn hơn 0\";\n        }\n        if (prod.qty === \"\" || prod.qty === null || isNaN(prod.qty) || Number(prod.qty) < 0) {\n          errors.qty = \"Số lượng phải lớn hơn hoặc bằng 0\";\n        }\n        if (!prod.price || isNaN(prod.price) || Number(prod.price) <= 0) {\n          errors.price = \"Giá phải lớn hơn 0\";\n        }\n      }\n    }\n    if (Object.keys(errors).length > 0) {\n      setAddError(Object.values(errors)[0]);\n      toast.error(Object.values(errors)[0]);\n      setAddLoading(false);\n      return;\n    }\n    const existedMaChiTietList = await fetchAllMaSanPhamChiTiet();\n    const chiTietSanPhams = [];\n    const chiTietSanPhamIndexMap = [];\n    productVariants.forEach((variant, colorIdx) => {\n      variant.products.forEach((prod, prodIdx) => {\n        const maChiTiet = getUniqueMaSanPhamChiTiet(productCode, variant.colorId, prod.sizeId, existedMaChiTietList);\n        chiTietSanPhams.push({\n          idSanPham: createdSanPhamId,\n          idChatLieu: selectedMaterial,\n          idThuongHieu: selectedBrand,\n          idMauSac: findId(colorOptions, variant.colorId),\n          idKichThuoc: findId(sizeOptions, prod.sizeId),\n          idCoAo: selectedCollar,\n          idTayAo: selectedSleeve,\n          gia: Number(prod.price),\n          soLuong: Number(prod.qty),\n          trongLuong: Number(prod.weight),\n          maSanPhamChiTiet: maChiTiet,\n          moTa: \"\",\n          trangThai: 1\n        });\n        chiTietSanPhamIndexMap.push({\n          colorId: variant.colorId,\n          sizeId: prod.sizeId,\n          idxInVariants: {\n            colorIdx: colorIdx,\n            prodIdx: prodIdx\n          }\n        });\n      });\n    });\n    try {\n      const addDetailPromises = chiTietSanPhams.map(ctsp => fetch(apiUrl(\"/chiTietSanPham\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(ctsp)\n      }).then(res => {\n        if (!res.ok) throw new Error(\"Lỗi khi thêm chi tiết sản phẩm\");\n        return res.json();\n      }));\n      const chiTietSanPhamResults = await Promise.all(addDetailPromises);\n      setAddSuccess(\"Thêm chi tiết sản phẩm thành công!\");\n      toast.success(\"Thêm chi tiết sản phẩm thành công!\");\n      setTimeout(() => {\n        navigate(\"/SanPham\");\n      }, 1000);\n      const saveImagePromises = [];\n      chiTietSanPhamResults.forEach((ctspResult, idx) => {\n        const {\n          colorId\n        } = chiTietSanPhamIndexMap[idx];\n        const imgList = selectedImages[colorId] || [];\n        imgList.forEach(imgId => {\n          const img = imageOptions.find(i => i.value === imgId);\n          if (!img) return;\n          saveImagePromises.push(fetch(apiUrl(`/hinhAnh/${img.value}`), {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              maAnh: img.label ? img.label : `Ảnh ${img.value}`,\n              duongDanAnh: img.url,\n              anhMacDinh: 0,\n              moTa: img.label ? img.label : \"\",\n              trangThai: 1,\n              idSanPhamChiTiet: ctspResult.id ? ctspResult.id : ctspResult,\n              idSanPham: createdSanPhamId\n            })\n          }));\n        });\n      });\n      await Promise.all(saveImagePromises);\n    } catch (err) {\n      setAddError(\"Thêm chi tiết sản phẩm thất bại!\");\n      toast.error(\"Thêm chi tiết sản phẩm thất bại!\");\n    }\n    setAddLoading(false);\n  };\n  const handleOpenAddProductModal = async () => {\n    setShowAddProductModal(true);\n    setNewProductName(\"\");\n    setNewProductCategory(selectedCategory ? selectedCategory : \"\");\n    setNewProductCountry(selectedCountry ? selectedCountry : \"\");\n    setNewProductDesc(\"\");\n    setAddError(\"\"); // SỬA: ĐỔI TỪ setAddProductError thành setAddError nếu đang dùng addError\n    setAddSuccess(\"\");\n    setAddProductValidate({});\n    const code = await generateMaSanPhamUnique();\n    setProductCode(code);\n  };\n  const handleAddNewProduct = async () => {\n    setAddProductLoading(true);\n    setAddError(\"\"); // SỬA: ĐỔI TỪ setAddProductError thành setAddError nếu đang dùng addError\n    setAddSuccess(\"\");\n    const errors = {};\n    if (!newProductName || !newProductName.trim()) errors.newProductName = \"Tên sản phẩm không được để trống\";\n    if (!newProductCategory) errors.newProductCategory = \"Vui lòng chọn danh mục\";\n    if (!newProductCountry) errors.newProductCountry = \"Vui lòng chọn xuất xứ\";\n    setAddProductValidate(errors);\n    if (Object.keys(errors).length > 0) {\n      setAddProductLoading(false);\n      toast.error(Object.values(errors)[0]);\n      return;\n    }\n    const productData = {\n      maSanPham: await generateMaSanPhamUnique(),\n      tenSanPham: newProductName,\n      idDanhMuc: newProductCategory,\n      xuatXu: newProductCountry,\n      moTa: newProductDesc,\n      trangThai: 1\n    };\n    try {\n      const res = await fetch(apiUrl(\"/sanPham\"), {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(productData)\n      });\n      if (!res.ok) throw new Error(\"Lỗi khi thêm sản phẩm mới\");\n      await res.json();\n      setAddSuccess(\"Thêm sản phẩm mới thành công!\");\n      toast.success(\"Thêm sản phẩm mới thành công!\");\n      setTimeout(() => {\n        setShowAddProductModal(false);\n        setAddSuccess(\"\");\n        fetch(apiUrl(\"/sanPham/all-ten\")).then(res => res.json()).then(data => {\n          const uniqueNames = Array.isArray(data) ? data.filter(Boolean).map(name => name.trim()) : [];\n          const opts = uniqueNames.map(name => ({\n            value: name,\n            label: name\n          }));\n          setProductNameOptions(opts);\n          if (opts[0]) setProductName(opts[0].value);\n        });\n      }, 1200);\n    } catch (err) {\n      setAddError(\"Thêm sản phẩm mới thất bại!\");\n      toast.error(\"Thêm sản phẩm mới thất bại!\");\n    }\n    setAddProductLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: [/*#__PURE__*/_jsxDEV(DashboardNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SoftBox, {\n      py: 3,\n      sx: {\n        background: \"#F4F6FB\",\n        minHeight: \"100vh\",\n        userSelect: \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          p: {\n            xs: 2,\n            md: 4\n          },\n          mb: 2,\n          maxWidth: \"1400px\",\n          margin: \"0 auto\",\n          boxShadow: 12,\n          borderRadius: 5,\n          background: \"linear-gradient(145deg,#fff 65%,#e3f0fa 130%)\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          color: \"#1976d2\",\n          fontWeight: \"bold\",\n          mb: 3,\n          letterSpacing: 1,\n          textAlign: \"center\",\n          children: \"Th\\xEAm S\\u1EA3n Ph\\u1EA9m M\\u1EDBi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddProduct,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"product-name\",\n                  style: {\n                    fontWeight: \"bold\",\n                    marginBottom: 4,\n                    display: \"block\"\n                  },\n                  children: [\"T\\xEAn s\\u1EA3n ph\\u1EA9m \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"red\"\n                    },\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 54\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    gap: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    flex: 1,\n                    sx: {\n                      mr: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(CreatableSelect, {\n                      inputId: \"product-name-input\",\n                      options: productNameOptions,\n                      value: productName ? {\n                        value: productName,\n                        label: productName\n                      } : null,\n                      onChange: handleProductNameChange,\n                      onInputChange: (inputValue, {\n                        action\n                      }) => {\n                        if (action === \"input-change\") setProductName(inputValue);\n                      },\n                      placeholder: \"Ch\\u1ECDn ho\\u1EB7c nh\\u1EADp t\\xEAn s\\u1EA3n ph\\u1EA9m\",\n                      isClearable: true,\n                      isSearchable: true,\n                      formatCreateLabel: inputValue => `Thêm mới: ${inputValue}`,\n                      noOptionsMessage: () => \"Không có sản phẩm, nhập tên mới để thêm\",\n                      styles: selectMenuStyle\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 818,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 817,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"T\\u1EA1o s\\u1EA3n ph\\u1EA9m m\\u1EDBi nhanh\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outlined\",\n                      size: \"large\",\n                      sx: {\n                        borderRadius: 3,\n                        textTransform: \"none\",\n                        fontWeight: 500,\n                        color: \"#1976d2\",\n                        borderColor: \"#90caf9\",\n                        minWidth: 44,\n                        minHeight: 44,\n                        p: 0,\n                        boxShadow: \"none\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        \"&:hover\": {\n                          borderColor: \"#1769aa\",\n                          background: \"#f0f6fd\",\n                          color: \"#1769aa\"\n                        }\n                      },\n                      onClick: handleOpenAddProductModal,\n                      children: /*#__PURE__*/_jsxDEV(FaPlus, {\n                        size: 22\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 863,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 839,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 838,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 816,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"brand-input\",\n                  style: {\n                    fontWeight: \"bold\",\n                    marginBottom: 4,\n                    display: \"block\"\n                  },\n                  children: \"Th\\u01B0\\u01A1ng hi\\u1EC7u\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 871,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CreatableSelect, {\n                  inputId: \"brand-input\",\n                  options: brandOptions,\n                  value: selectedBrand ? {\n                    value: selectedBrand,\n                    label: getLabelById(brandOptions, selectedBrand)\n                  } : null,\n                  onChange: opt => setSelectedBrand(opt ? opt.value : \"\"),\n                  onInputChange: (inputValue, {\n                    action\n                  }) => {\n                    if (action === \"input-change\") setSelectedBrand(inputValue);\n                  },\n                  placeholder: \"Ch\\u1ECDn ho\\u1EB7c nh\\u1EADp th\\u01B0\\u01A1ng hi\\u1EC7u\",\n                  isClearable: true,\n                  isSearchable: true,\n                  formatCreateLabel: inputValue => `Thêm mới: ${inputValue}`,\n                  noOptionsMessage: () => \"Không có thương hiệu, nhập tên mới để thêm\",\n                  styles: selectMenuStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 874,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"material-input\",\n                  style: {\n                    fontWeight: \"bold\",\n                    marginBottom: 4,\n                    display: \"block\"\n                  },\n                  children: \"Ch\\u1EA5t li\\u1EC7u\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 900,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CreatableSelect, {\n                  inputId: \"material-input\",\n                  options: materialOptions,\n                  value: selectedMaterial ? {\n                    value: selectedMaterial,\n                    label: getLabelById(materialOptions, selectedMaterial)\n                  } : null,\n                  onChange: opt => setSelectedMaterial(opt ? opt.value : \"\"),\n                  onInputChange: (inputValue, {\n                    action\n                  }) => {\n                    if (action === \"input-change\") setSelectedMaterial(inputValue);\n                  },\n                  placeholder: \"Ch\\u1ECDn ho\\u1EB7c nh\\u1EADp ch\\u1EA5t li\\u1EC7u\",\n                  isClearable: true,\n                  isSearchable: true,\n                  formatCreateLabel: inputValue => `Thêm mới: ${inputValue}`,\n                  noOptionsMessage: () => \"Không có chất liệu, nhập tên mới để thêm\",\n                  styles: selectMenuStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 903,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 898,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"collar-input\",\n                  style: {\n                    fontWeight: \"bold\",\n                    marginBottom: 4,\n                    display: \"block\"\n                  },\n                  children: \"C\\u1ED5 \\xE1o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 929,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CreatableSelect, {\n                  inputId: \"collar-input\",\n                  options: collarOptions,\n                  value: selectedCollar ? {\n                    value: selectedCollar,\n                    label: getLabelById(collarOptions, selectedCollar)\n                  } : null,\n                  onChange: opt => setSelectedCollar(opt ? opt.value : \"\"),\n                  onInputChange: (inputValue, {\n                    action\n                  }) => {\n                    if (action === \"input-change\") setSelectedCollar(inputValue);\n                  },\n                  placeholder: \"Ch\\u1ECDn ho\\u1EB7c nh\\u1EADp c\\u1ED5 \\xE1o\",\n                  isClearable: true,\n                  isSearchable: true,\n                  formatCreateLabel: inputValue => `Thêm mới: ${inputValue}`,\n                  noOptionsMessage: () => \"Không có cổ áo, nhập tên mới để thêm\",\n                  styles: selectMenuStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 932,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 928,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"sleeve-input\",\n                  style: {\n                    fontWeight: \"bold\",\n                    marginBottom: 4,\n                    display: \"block\"\n                  },\n                  children: \"Tay \\xE1o\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 958,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CreatableSelect, {\n                  inputId: \"sleeve-input\",\n                  options: sleeveOptions,\n                  value: selectedSleeve ? {\n                    value: selectedSleeve,\n                    label: getLabelById(sleeveOptions, selectedSleeve)\n                  } : null,\n                  onChange: opt => setSelectedSleeve(opt ? opt.value : \"\"),\n                  onInputChange: (inputValue, {\n                    action\n                  }) => {\n                    if (action === \"input-change\") setSelectedSleeve(inputValue);\n                  },\n                  placeholder: \"Ch\\u1ECDn ho\\u1EB7c nh\\u1EADp tay \\xE1o\",\n                  isClearable: true,\n                  isSearchable: true,\n                  formatCreateLabel: inputValue => `Thêm mới: ${inputValue}`,\n                  noOptionsMessage: () => \"Không có tay áo, nhập tên mới để thêm\",\n                  styles: selectMenuStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 961,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 957,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"color-input\",\n                  style: {\n                    fontWeight: \"bold\",\n                    marginBottom: 4,\n                    display: \"block\"\n                  },\n                  children: \"M\\xE0u s\\u1EAFc\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 987,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  inputId: \"color-input\",\n                  isMulti: true,\n                  options: colorOptions,\n                  value: colorOptions.filter(o => colors.includes(o.value)),\n                  onChange: opts => setColors(opts ? opts.map(opt => opt.value) : []),\n                  placeholder: \"Ch\\u1ECDn nhi\\u1EC1u m\\xE0u s\\u1EAFc\",\n                  closeMenuOnSelect: false,\n                  styles: selectMenuStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 990,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 986,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 985,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"size-input\",\n                  style: {\n                    fontWeight: \"bold\",\n                    marginBottom: 4,\n                    display: \"block\"\n                  },\n                  children: \"K\\xEDch c\\u1EE1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1006,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  inputId: \"size-input\",\n                  isMulti: true,\n                  options: sizeOptions,\n                  value: sizeOptions.filter(o => sizes.includes(o.value)),\n                  onChange: opts => setSizes(opts ? opts.map(opt => opt.value) : []),\n                  placeholder: \"Ch\\u1ECDn nhi\\u1EC1u k\\xEDch c\\u1EE1\",\n                  closeMenuOnSelect: false,\n                  styles: selectMenuStyle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1004,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SoftBox, {\n            my: 4,\n            children: [/*#__PURE__*/_jsxDEV(SoftBox, {\n              textAlign: \"right\",\n              mb: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"success\",\n                size: \"large\",\n                onClick: handleAddProductDetail,\n                sx: {\n                  fontWeight: 600,\n                  px: 4,\n                  fontSize: 17,\n                  borderRadius: 3,\n                  boxShadow: 3\n                },\n                children: [addLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 22,\n                  color: \"inherit\",\n                  sx: {\n                    mr: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1034,\n                  columnNumber: 41\n                }, this), \"Th\\xEAm s\\u1EA3n ph\\u1EA9m chi ti\\u1EBFt\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1025,\n              columnNumber: 29\n            }, this), productVariants.map((variant, colorIdx) => {\n              var _checkedRows$colorIdx, _quickWeight$global, _quickQty$global;\n              const allChecked = ((_checkedRows$colorIdx = checkedRows[colorIdx]) === null || _checkedRows$colorIdx === void 0 ? void 0 : _checkedRows$colorIdx.length) === variant.products.length;\n              return /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  mb: 2.5,\n                  borderRadius: 3,\n                  boxShadow: 2,\n                  p: 2.5,\n                  background: \"#fff\",\n                  userSelect: \"none\",\n                  borderLeft: \"7px solid #1976d2\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  mb: 2,\n                  flexWrap: \"wrap\",\n                  gap: 2,\n                  children: [/*#__PURE__*/_jsxDEV(SoftBox, {\n                    fontWeight: \"bold\",\n                    sx: {\n                      color: \"#1976d2\",\n                      fontSize: 16,\n                      mr: 2\n                    },\n                    children: `Màu: ${getLabelById(colorOptions, variant.colorId)}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1062,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                    sx: {\n                      verticalAlign: \"middle\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: isCheckedAllGlobal ? \"Bỏ chọn tất cả\" : \"Chọn tất cả\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: isCheckedAllGlobal,\n                        onChange: () => handleCheckAllRowsGlobal(!isCheckedAllGlobal),\n                        style: {\n                          transform: \"scale(1.3)\",\n                          marginRight: 5,\n                          verticalAlign: \"middle\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1070,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1069,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        fontWeight: 400,\n                        fontSize: 14\n                      },\n                      children: \"Ch\\u1ECDn t\\u1EA5t c\\u1EA3\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1081,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1068,\n                    columnNumber: 45\n                  }, this), isCheckedAllGlobal && colorIdx === 0 && /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    gap: 2,\n                    sx: {\n                      background: \"#f4f7fd\",\n                      borderRadius: 2,\n                      px: 2,\n                      py: 1,\n                      ml: 2\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                      sx: {\n                        minWidth: 120,\n                        mr: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"quick-global-weight\",\n                        style: {\n                          fontWeight: 400,\n                          fontSize: 13,\n                          marginBottom: 4,\n                          display: \"block\"\n                        },\n                        children: \"Tr\\u1ECDng l\\u01B0\\u1EE3ng (g)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1097,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        id: \"quick-global-weight\",\n                        type: \"text\",\n                        value: (_quickWeight$global = quickWeight.global) !== null && _quickWeight$global !== void 0 ? _quickWeight$global : \"\",\n                        onChange: e => setQuickWeight(prev => ({\n                          ...prev,\n                          global: e.target.value\n                        })),\n                        size: \"small\",\n                        sx: {\n                          width: 110,\n                          background: \"#fff\"\n                        },\n                        placeholder: \"VD: 300\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1100,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1096,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      sx: {\n                        minWidth: 120,\n                        mr: 2\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"quick-global-qty\",\n                        style: {\n                          fontWeight: 400,\n                          fontSize: 13,\n                          marginBottom: 4,\n                          display: \"block\"\n                        },\n                        children: \"S\\u1ED1 l\\u01B0\\u1EE3ng\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1113,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        id: \"quick-global-qty\",\n                        type: \"text\",\n                        value: (_quickQty$global = quickQty.global) !== null && _quickQty$global !== void 0 ? _quickQty$global : \"\",\n                        onChange: e => setQuickQty(prev => ({\n                          ...prev,\n                          global: e.target.value\n                        })),\n                        size: \"small\",\n                        sx: {\n                          width: 110,\n                          background: \"#fff\"\n                        },\n                        placeholder: \"VD: 20\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1116,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1112,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                      sx: {\n                        minWidth: 120\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"quick-global-price\",\n                        style: {\n                          fontWeight: 400,\n                          fontSize: 13,\n                          marginBottom: 4,\n                          display: \"block\"\n                        },\n                        children: \"Gi\\xE1 (\\u20AB)\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1129,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(Input, {\n                        id: \"quick-global-price\",\n                        type: \"text\",\n                        value: formatCurrencyVND(quickPrice.global),\n                        onChange: e => setQuickPrice(prev => ({\n                          ...prev,\n                          global: parseCurrencyVND(e.target.value)\n                        })),\n                        size: \"small\",\n                        sx: {\n                          width: 110,\n                          background: \"#fff\"\n                        },\n                        placeholder: \"VD: 150.000\\u0111\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1132,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1128,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1084,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1055,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Table, {\n                  columns: [{\n                    name: \"check\",\n                    label: \"\",\n                    align: \"center\",\n                    width: 40\n                  }, {\n                    name: \"name\",\n                    label: \"Sản phẩm\",\n                    align: \"left\"\n                  }, {\n                    name: \"size\",\n                    label: \"Kích cỡ\",\n                    align: \"center\"\n                  }, {\n                    name: \"weight\",\n                    label: \"Trọng lượng (g)\",\n                    align: \"right\"\n                  }, {\n                    name: \"qty\",\n                    label: \"Số lượng\",\n                    align: \"right\"\n                  }, {\n                    name: \"price\",\n                    label: \"Giá (₫)\",\n                    align: \"right\"\n                  }, {\n                    name: \"image\",\n                    label: \"Ảnh\",\n                    align: \"center\"\n                  }, {\n                    name: \"action\",\n                    label: \"\",\n                    align: \"center\",\n                    width: 40\n                  }],\n                  rows: variant.products.map((p, prodIdx) => {\n                    var _checkedRows$colorIdx2, _p$weight, _p$qty;\n                    return {\n                      check: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        checked: ((_checkedRows$colorIdx2 = checkedRows[colorIdx]) === null || _checkedRows$colorIdx2 === void 0 ? void 0 : _checkedRows$colorIdx2.includes(prodIdx)) || false,\n                        onChange: () => handleCheckRow(colorIdx, prodIdx)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1172,\n                        columnNumber: 53\n                      }, this),\n                      name: /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: p.name || \"\",\n                        children: /*#__PURE__*/_jsxDEV(Input, {\n                          value: p.name,\n                          size: \"small\",\n                          readOnly: true,\n                          sx: {\n                            minWidth: 90\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1180,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1179,\n                        columnNumber: 53\n                      }, this),\n                      size: /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: getLabelById(sizeOptions, p.sizeId) || \"\",\n                        children: /*#__PURE__*/_jsxDEV(Input, {\n                          value: getLabelById(sizeOptions, p.sizeId),\n                          size: \"small\",\n                          readOnly: true,\n                          sx: {\n                            minWidth: 60\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1192,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1189,\n                        columnNumber: 53\n                      }, this),\n                      weight: /*#__PURE__*/_jsxDEV(FormControl, {\n                        sx: {\n                          minWidth: 120\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Input, {\n                          id: `weight-${colorIdx}-${prodIdx}`,\n                          type: \"text\",\n                          value: String((_p$weight = p.weight) !== null && _p$weight !== void 0 ? _p$weight : \"\"),\n                          onChange: e => handleVariantValueChange(colorIdx, prodIdx, \"weight\", e.target.value),\n                          size: \"small\",\n                          sx: {\n                            width: 110,\n                            background: \"#fff\"\n                          },\n                          placeholder: \"VD: 300\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1202,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1201,\n                        columnNumber: 53\n                      }, this),\n                      qty: /*#__PURE__*/_jsxDEV(FormControl, {\n                        sx: {\n                          minWidth: 120\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Input, {\n                          id: `qty-${colorIdx}-${prodIdx}`,\n                          type: \"text\",\n                          value: String((_p$qty = p.qty) !== null && _p$qty !== void 0 ? _p$qty : \"\"),\n                          onChange: e => handleVariantValueChange(colorIdx, prodIdx, \"qty\", e.target.value),\n                          size: \"small\",\n                          sx: {\n                            width: 110,\n                            background: \"#fff\"\n                          },\n                          placeholder: \"VD: 20\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1222,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1221,\n                        columnNumber: 53\n                      }, this),\n                      price: /*#__PURE__*/_jsxDEV(FormControl, {\n                        sx: {\n                          minWidth: 120\n                        },\n                        children: /*#__PURE__*/_jsxDEV(Input, {\n                          id: `price-${colorIdx}-${prodIdx}`,\n                          type: \"text\",\n                          value: formatCurrencyVND(p.price),\n                          onChange: e => handleVariantValueChange(colorIdx, prodIdx, \"price\", e.target.value),\n                          size: \"small\",\n                          sx: {\n                            width: 110,\n                            background: \"#fff\"\n                          },\n                          placeholder: \"VD: 150.000\\u0111\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1242,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1241,\n                        columnNumber: 53\n                      }, this),\n                      image: /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          gap: 1\n                        },\n                        children: [Object.values(selectedImages).flat().map((imgId, idx) => {\n                          const imgObj = imageOptions.find(i => i.value === imgId);\n                          if (!imgObj) return null;\n                          return /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: imgObj.url,\n                            alt: imgObj.label,\n                            width: 38,\n                            height: 38,\n                            style: {\n                              borderRadius: 5,\n                              border: \"1px solid #e3e9f0\",\n                              objectFit: \"cover\",\n                              background: \"#fafbfc\",\n                              marginRight: 4,\n                              boxShadow: \"0 2px 8px rgba(25,118,210,0.07)\"\n                            }\n                          }, imgId + \"-\" + idx, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1268,\n                            columnNumber: 69\n                          }, this);\n                        }), /*#__PURE__*/_jsxDEV(Button, {\n                          variant: \"outlined\",\n                          size: \"small\",\n                          sx: {\n                            minWidth: 54,\n                            ml: 1\n                          },\n                          onClick: () => openImageModal(\"all\"),\n                          children: /*#__PURE__*/_jsxDEV(Icon, {\n                            fontSize: \"small\",\n                            children: \"image\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1291,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1285,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1261,\n                        columnNumber: 53\n                      }, this),\n                      action: /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: \"X\\xF3a d\\xF2ng n\\xE0y\",\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          size: \"small\",\n                          sx: {\n                            color: \"#eb5757\"\n                          },\n                          children: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 1298,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1297,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1296,\n                        columnNumber: 53\n                      }, this)\n                    };\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1147,\n                  columnNumber: 41\n                }, this)]\n              }, colorIdx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1043,\n                columnNumber: 37\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: showAddProductModal,\n        onClose: () => setShowAddProductModal(false),\n        maxWidth: \"xs\",\n        fullWidth: true,\n        PaperProps: {\n          sx: {\n            borderRadius: 4\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          sx: {\n            fontWeight: 700,\n            fontSize: 22,\n            color: \"#1976d2\"\n          },\n          children: \"Th\\xEAm s\\u1EA3n ph\\u1EA9m m\\u1EDBi nhanh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1317,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(SoftBox, {\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-product-name\",\n              style: {\n                fontWeight: \"bold\",\n                marginBottom: 4,\n                display: \"block\"\n              },\n              children: [\"T\\xEAn s\\u1EA3n ph\\u1EA9m \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1323,\n                columnNumber: 46\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"new-product-name\",\n              inputRef: autoFocusRef,\n              fullWidth: true,\n              value: newProductName,\n              onChange: e => setNewProductName(e.target.value),\n              placeholder: \"Nh\\u1EADp t\\xEAn s\\u1EA3n ph\\u1EA9m m\\u1EDBi\",\n              sx: {\n                background: \"#f6fafd\",\n                borderRadius: 2\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1325,\n              columnNumber: 29\n            }, this), (addProductValidate === null || addProductValidate === void 0 ? void 0 : addProductValidate.newProductName) && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                color: \"red\",\n                fontSize: 13,\n                mt: 0.5\n              },\n              children: addProductValidate.newProductName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1335,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1321,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SoftBox, {\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-product-category\",\n              style: {\n                fontWeight: \"bold\",\n                marginBottom: 4,\n                display: \"block\"\n              },\n              children: [\"Danh m\\u1EE5c \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1342,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1341,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              inputId: \"new-product-category\",\n              options: categoryOptions,\n              value: categoryOptions.find(o => o.value === newProductCategory) || null,\n              onChange: opt => setNewProductCategory(opt ? opt.value : \"\"),\n              placeholder: \"Ch\\u1ECDn danh m\\u1EE5c\",\n              styles: selectMenuStyle,\n              isClearable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1344,\n              columnNumber: 29\n            }, this), (addProductValidate === null || addProductValidate === void 0 ? void 0 : addProductValidate.newProductCategory) && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                color: \"red\",\n                fontSize: 13,\n                mt: 0.5\n              },\n              children: addProductValidate.newProductCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1354,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1340,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SoftBox, {\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-product-country\",\n              style: {\n                fontWeight: \"bold\",\n                marginBottom: 4,\n                display: \"block\"\n              },\n              children: [\"Xu\\u1EA5t x\\u1EE9 \", /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"red\"\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1361,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1360,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              inputId: \"new-product-country\",\n              options: countryOptions,\n              value: countryOptions.find(o => o.value === newProductCountry) || null,\n              onChange: opt => setNewProductCountry(opt ? opt.value : \"\"),\n              placeholder: \"Ch\\u1ECDn qu\\u1ED1c gia\",\n              styles: selectMenuStyle,\n              isClearable: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1363,\n              columnNumber: 29\n            }, this), (addProductValidate === null || addProductValidate === void 0 ? void 0 : addProductValidate.newProductCountry) && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                color: \"red\",\n                fontSize: 13,\n                mt: 0.5\n              },\n              children: addProductValidate.newProductCountry\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1373,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1359,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SoftBox, {\n            mb: 2,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"new-product-desc\",\n              style: {\n                fontWeight: \"bold\",\n                marginBottom: 4,\n                display: \"block\"\n              },\n              children: \"M\\xF4 t\\u1EA3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1379,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"new-product-desc\",\n              fullWidth: true,\n              value: newProductDesc,\n              onChange: e => setNewProductDesc(e.target.value),\n              placeholder: \"M\\xF4 t\\u1EA3 s\\u1EA3n ph\\u1EA9m (kh\\xF4ng b\\u1EAFt bu\\u1ED9c)\",\n              sx: {\n                background: \"#f6fafd\",\n                borderRadius: 2\n              },\n              multiline: true,\n              rows: 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1382,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1378,\n            columnNumber: 25\n          }, this), addError && /*#__PURE__*/_jsxDEV(SoftBox, {\n            color: \"error\",\n            mb: 1,\n            children: addError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1394,\n            columnNumber: 29\n          }, this), addSuccess && /*#__PURE__*/_jsxDEV(SoftBox, {\n            color: \"success\",\n            mb: 1,\n            children: addSuccess\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1399,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1320,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: () => setShowAddProductModal(false),\n            children: \"\\u0110\\xF3ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1405,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"info\",\n            onClick: handleAddNewProduct,\n            disabled: addProductLoading,\n            children: [addProductLoading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 18,\n              color: \"inherit\",\n              sx: {\n                mr: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1415,\n              columnNumber: 33\n            }, this), \"Th\\xEAm s\\u1EA3n ph\\u1EA9m\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1408,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1404,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: showImageModal,\n        onClose: closeImageModal,\n        maxWidth: \"md\",\n        fullWidth: true,\n        PaperProps: {\n          sx: {\n            borderRadius: 4\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          sx: {\n            fontWeight: 700,\n            fontSize: 22,\n            color: \"#1976d2\"\n          },\n          children: [\"Ch\\u1ECDn \\u1EA3nh cho m\\xE0u \", getLabelById(colorOptions, modalColor)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1430,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(SoftBox, {\n            mb: 2,\n            fontWeight: \"bold\",\n            children: \"Danh s\\xE1ch \\u1EA3nh \\u0111\\xE3 ch\\u1ECDn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1434,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SoftBox, {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: 2,\n            flexWrap: \"wrap\",\n            style: {\n              minHeight: 100,\n              border: \"1px dashed #d5d5d5\",\n              borderRadius: 8,\n              width: \"100%\",\n              padding: 6,\n              background: \"#f9fafc\"\n            },\n            children: tempImages.length === 0 ? /*#__PURE__*/_jsxDEV(SoftBox, {\n              textAlign: \"center\",\n              color: \"secondary\",\n              width: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://cdn-icons-png.flaticon.com/512/4076/4076549.png\",\n                alt: \"no-img\",\n                style: {\n                  width: 48,\n                  opacity: 0.5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1453,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: 14,\n                  opacity: 0.7\n                },\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1458,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1452,\n              columnNumber: 33\n            }, this) : tempImages.map(id => {\n              const img = imageOptions.find(i => i.value === id);\n              if (!img) return null;\n              return /*#__PURE__*/_jsxDEV(SoftBox, {\n                sx: {\n                  border: \"1px solid #ddd\",\n                  borderRadius: 2,\n                  p: 0.5,\n                  width: 90,\n                  height: 80,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  background: \"#fafaff\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: img.url,\n                  alt: img.label,\n                  style: {\n                    width: 70,\n                    height: 50,\n                    objectFit: \"cover\",\n                    borderRadius: 4\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1480,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: 12,\n                    textAlign: \"center\"\n                  },\n                  children: img.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1490,\n                  columnNumber: 45\n                }, this)]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1465,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1437,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SoftBox, {\n            fontWeight: \"bold\",\n            mt: 4,\n            mb: 2,\n            children: \"Danh s\\xE1ch \\u1EA3nh t\\u1EEB h\\u1EC7 th\\u1ED1ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1498,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SoftBox, {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: 2,\n            children: imageOptions.length === 0 ? /*#__PURE__*/_jsxDEV(SoftBox, {\n              textAlign: \"center\",\n              color: \"secondary\",\n              width: \"100%\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://cdn-icons-png.flaticon.com/512/4076/4076549.png\",\n                alt: \"no-img\",\n                style: {\n                  width: 48,\n                  opacity: 0.5\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1504,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: 14,\n                  opacity: 0.7\n                },\n                children: \"No Data Found\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1509,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1503,\n              columnNumber: 33\n            }, this) : imageOptions.map(img => /*#__PURE__*/_jsxDEV(SoftBox, {\n              sx: {\n                border: tempImages.includes(img.value) ? \"2px solid orange\" : \"1px dashed #bbb\",\n                borderRadius: 2,\n                p: 0.5,\n                position: \"relative\",\n                width: 120,\n                height: 110,\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                cursor: \"pointer\",\n                background: \"#fff\",\n                transition: \"box-shadow 0.2s, border 0.2s\",\n                boxShadow: tempImages.includes(img.value) ? \"0 2px 8px rgba(255,165,0,0.15)\" : \"none\"\n              },\n              onClick: () => toggleTempImage(img.value),\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: tempImages.includes(img.value),\n                readOnly: true,\n                style: {\n                  position: \"absolute\",\n                  left: 2,\n                  top: 2,\n                  zIndex: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1537,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: img.url,\n                alt: img.label,\n                style: {\n                  width: 100,\n                  height: 80,\n                  objectFit: \"cover\",\n                  borderRadius: 4\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1548,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: 14,\n                  marginTop: 4\n                },\n                children: img.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1558,\n                columnNumber: 41\n              }, this)]\n            }, img.value, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1513,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1501,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1433,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: closeImageModal,\n            sx: {\n              minWidth: 110\n            },\n            children: \"\\u0110\\xF3ng\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1567,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"info\",\n            onClick: handleSaveImages,\n            disabled: !tempImages.length,\n            sx: {\n              minWidth: 120,\n              fontWeight: 600\n            },\n            children: \"L\\u01B0u ch\\u1ECDn \\u1EA3nh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1570,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1566,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1421,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      newestOnTop: false,\n      closeOnClick: true,\n      rtl: false,\n      pauseOnFocusLoss: true,\n      draggable: true,\n      pauseOnHover: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1582,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1593,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 778,\n    columnNumber: 9\n  }, this);\n}\n_s(ProductForm, \"913qPzVaEdNbnWIPEc/kMlNJPuU=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","IconButton","Button","Input","FormControl","Dialog","DialogTitle","DialogContent","DialogActions","SoftBox","DashboardLayout","DashboardNavbar","Footer","Icon","Table","CircularProgress","Grid","Tooltip","Typography","Box","CreatableSelect","Select","FaPlus","FaTrash","toast","ToastContainer","useNavigate","jsxDEV","_jsxDEV","API_BASE","process","env","REACT_APP_API_BASE","apiUrl","path","startsWith","normalizeUrl","url","generateMaSanPhamUnique","res","fetch","data","json","Array","isArray","numbers","map","ma","match","exec","parseInt","filter","num","sort","a","b","next","i","length","String","padStart","fetchAllMaSanPhamChiTiet","getUniqueMaSanPhamChiTiet","maSanPhamBase","colorId","sizeId","existedList","idx","includes","push","getProductVariantsByColors","colors","sizes","productName","selectedColors","Boolean","selectedSizes","products","name","weight","qty","price","unit","image","getLabelById","options","id","_options$find","find","option","value","label","selectMenuStyle","menu","base","borderRadius","marginTop","boxShadow","border","background","color","zIndex","input","state","fontSize","opacity","isFocused","placeholder","backgroundColor","isSelected","fontWeight","cursor","padding","formatCurrencyVND","number","Number","replace","isNaN","toLocaleString","parseCurrencyVND","ProductForm","_s","productCode","setProductCode","setProductName","productNameOptions","setProductNameOptions","productDesc","setProductDesc","categoryOptions","setCategoryOptions","selectedCategory","setSelectedCategory","brandOptions","setBrandOptions","selectedBrand","setSelectedBrand","materialOptions","setMaterialOptions","selectedMaterial","setSelectedMaterial","countryOptions","setCountryOptions","selectedCountry","setSelectedCountry","collarOptions","setCollarOptions","selectedCollar","setSelectedCollar","sleeveOptions","setSleeveOptions","selectedSleeve","setSelectedSleeve","colorOptions","setColorOptions","setColors","sizeOptions","setSizeOptions","setSizes","showImageModal","setShowImageModal","modalColor","setModalColor","selectedImages","setSelectedImages","tempImages","setTempImages","imageOptions","setImageOptions","addLoading","setAddLoading","productVariants","setProductVariants","createdSanPhamId","setCreatedSanPhamId","checkedRows","setCheckedRows","quickWeight","setQuickWeight","quickQty","setQuickQty","quickPrice","setQuickPrice","showAddProductModal","setShowAddProductModal","newProductName","setNewProductName","newProductCategory","setNewProductCategory","newProductDesc","setNewProductDesc","addProductLoading","setAddProductLoading","addError","setAddError","addSuccess","setAddSuccess","autoFocusRef","newProductCountry","setNewProductCountry","addProductValidate","setAddProductValidate","isCheckedAllGlobal","setIsCheckedAllGlobal","navigate","current","focus","then","opts","item","tenDanhMuc","catch","tenThuongHieu","reverse","tenChatLieu","tenCoAo","tenTayAo","tenMauSac","tenKichCo","moTa","duongDanAnh","uniqueNames","trim","JSON","stringify","encodeURIComponent","prod","idDanhMuc","xuatXu","maSanPham","_categoryOptions$","_countryOptions$","handleProductNameChange","opt","handleVariantValueChange","colorIdx","prodIdx","field","prev","newArr","p","handleCheckRow","list","handleCheckAllRowsGlobal","checked","checkedAllRows","forEach","variant","_","global","openImageModal","Object","values","flat","closeImageModal","handleSaveImages","all","toggleTempImage","imgId","sel","findId","arr","x","handleAddProduct","e","preventDefault","errors","keys","error","setShowAttributes","success","tenSanPham","trangThai","method","headers","body","ok","Error","result","err","handleAddProductDetail","existedMaChiTietList","chiTietSanPhams","chiTietSanPhamIndexMap","maChiTiet","idSanPham","idChatLieu","idThuongHieu","idMauSac","idKichThuoc","idCoAo","idTayAo","gia","soLuong","trongLuong","maSanPhamChiTiet","idxInVariants","addDetailPromises","ctsp","chiTietSanPhamResults","Promise","setTimeout","saveImagePromises","ctspResult","imgList","img","maAnh","anhMacDinh","idSanPhamChiTiet","handleOpenAddProductModal","code","handleAddNewProduct","productData","children","fileName","_jsxFileName","lineNumber","columnNumber","py","sx","minHeight","userSelect","xs","md","mb","maxWidth","margin","letterSpacing","textAlign","onSubmit","container","spacing","fullWidth","htmlFor","style","marginBottom","display","flexDirection","alignItems","gap","flex","mr","inputId","onChange","onInputChange","inputValue","action","isClearable","isSearchable","formatCreateLabel","noOptionsMessage","styles","title","size","textTransform","borderColor","minWidth","justifyContent","onClick","isMulti","o","closeMenuOnSelect","my","px","_checkedRows$colorIdx","_quickWeight$global","_quickQty$global","allChecked","borderLeft","flexWrap","verticalAlign","type","transform","marginRight","ml","target","width","columns","align","rows","_checkedRows$colorIdx2","_p$weight","_p$qty","check","readOnly","imgObj","src","alt","height","objectFit","open","onClose","PaperProps","inputRef","mt","multiline","disabled","position","transition","left","top","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","_c","$RefreshReg$"],"sources":["D:/fashion-shirt-shop/DATN/src/main/resources/templates/fashionshop-ui/src/layouts/SanPham/themsp.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Input from \"@mui/material/Input\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport SoftBox from \"components/SoftBox\";\r\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\r\nimport DashboardNavbar from \"examples/Navbars/DashboardNavbar\";\r\nimport Footer from \"examples/Footer\";\r\nimport Icon from \"@mui/material/Icon\";\r\nimport Table from \"examples/Tables/Table\";\r\nimport { CircularProgress, Grid, Tooltip, Typography, Box } from \"@mui/material\";\r\nimport CreatableSelect from \"react-select/creatable\";\r\nimport Select from \"react-select\";\r\nimport { FaPlus, FaTrash } from \"react-icons/fa\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst API_BASE = process.env.REACT_APP_API_BASE || \"http://localhost:8080\";\r\nconst apiUrl = (path) => `${API_BASE}${path.startsWith(\"/\") ? \"\" : \"/\"}${path}`;\r\n\r\nconst normalizeUrl = (url) =>\r\n    url && url.startsWith(\"http\")\r\n        ? url\r\n        : `${API_BASE}${url?.startsWith(\"/\") ? \"\" : \"/\"}${url || \"\"}`;\r\n\r\nasync function generateMaSanPhamUnique() {\r\n    try {\r\n        const res = await fetch(apiUrl(\"/sanPham/all-ma\"));\r\n        const data = await res.json();\r\n        if (!Array.isArray(data)) {\r\n            return \"SP0001\";\r\n        }\r\n        const numbers = data\r\n            .map((ma) => {\r\n                const match = /^SP(\\d{4})$/.exec(ma);\r\n                return match ? parseInt(match[1], 10) : null;\r\n            })\r\n            .filter((num) => num !== null)\r\n            .sort((a, b) => a - b);\r\n        let next = 1;\r\n        for (let i = 0; i < numbers.length; i++) {\r\n            if (numbers[i] !== i + 1) {\r\n                next = i + 1;\r\n                break;\r\n            }\r\n            next = numbers.length + 1;\r\n        }\r\n        return \"SP\" + String(next).padStart(4, \"0\");\r\n    } catch {\r\n        return \"SP0001\";\r\n    }\r\n}\r\n\r\nasync function fetchAllMaSanPhamChiTiet() {\r\n    try {\r\n        const res = await fetch(apiUrl(\"/chiTietSanPham/all-ma\"));\r\n        const data = await res.json();\r\n        if (!Array.isArray(data)) return [];\r\n        return data;\r\n    } catch {\r\n        return [];\r\n    }\r\n}\r\n\r\nfunction getUniqueMaSanPhamChiTiet(maSanPhamBase, colorId, sizeId, existedList) {\r\n    let idx = 1;\r\n    let ma = `${maSanPhamBase}-${colorId}-${sizeId}`;\r\n    while (existedList.includes(ma)) {\r\n        idx += 1;\r\n        ma = `${maSanPhamBase}-${colorId}-${sizeId}-${idx}`;\r\n    }\r\n    existedList.push(ma);\r\n    return ma;\r\n}\r\n\r\nfunction getProductVariantsByColors(colors, sizes, productName) {\r\n    const selectedColors = colors.filter(Boolean);\r\n    const selectedSizes = sizes.filter(Boolean);\r\n    if (!selectedColors.length || !selectedSizes.length) return [];\r\n    return selectedColors.map((colorId) => ({\r\n        colorId: colorId,\r\n        products: selectedSizes.map((sizeId) => ({\r\n            name: productName,\r\n            sizeId: sizeId,\r\n            weight: \"\",\r\n            qty: \"\",\r\n            price: \"\",\r\n            unit: \"g\",\r\n            image: \"\",\r\n        })),\r\n    }));\r\n}\r\n\r\nconst getLabelById = (options, id) =>\r\n    options.find((option) => `${option.value}` === `${id}`)?.label || id;\r\n\r\nconst selectMenuStyle = {\r\n    menu: (base) => ({\r\n        ...base,\r\n        borderRadius: 8,\r\n        marginTop: 2,\r\n        boxShadow: \"0 8px 24px 0 rgba(34,82,168,0.11)\",\r\n        border: \"1px solid #bbdefb\",\r\n        background: \"#fff\",\r\n        color: \"#263238\",\r\n        zIndex: 20,\r\n    }),\r\n    input: (base, state) => ({\r\n        ...base,\r\n        color: \"#263238\",\r\n        fontSize: 16,\r\n        background: \"transparent\",\r\n        opacity: state.isFocused ? 0.5 : 1,\r\n    }),\r\n    placeholder: (base, state) => ({\r\n        ...base,\r\n        color: \"#a8b8c3\",\r\n        fontSize: 16,\r\n        opacity: state.isFocused ? 0.4 : 1,\r\n    }),\r\n    option: (base, state) => ({\r\n        ...base,\r\n        backgroundColor: state.isSelected\r\n            ? \"#e3f2fd\"\r\n            : state.isFocused\r\n                ? \"#f0f6fd\"\r\n                : \"#fff\",\r\n        color: \"#263238\",\r\n        fontWeight: state.isSelected ? 600 : 400,\r\n        cursor: \"pointer\",\r\n        fontSize: 16,\r\n        padding: \"10px 16px\",\r\n    }),\r\n};\r\n\r\nfunction formatCurrencyVND(value) {\r\n    const number = Number(String(value).replace(/[^\\d]/g, \"\"));\r\n    if (Number.isNaN(number) || value === \"\") return \"\";\r\n    return number.toLocaleString(\"vi-VN\");\r\n}\r\n\r\nfunction parseCurrencyVND(value) {\r\n    return String(value).replace(/[^\\d]/g, \"\");\r\n}\r\n\r\nfunction ProductForm() {\r\n    const [productCode, setProductCode] = useState(\"\");\r\n    const [productName, setProductName] = useState(\"\");\r\n    const [productNameOptions, setProductNameOptions] = useState([]);\r\n    const [productDesc, setProductDesc] = useState(\"\");\r\n    const [categoryOptions, setCategoryOptions] = useState([]);\r\n    const [selectedCategory, setSelectedCategory] = useState(\"\");\r\n    const [brandOptions, setBrandOptions] = useState([]);\r\n    const [selectedBrand, setSelectedBrand] = useState(\"\");\r\n    const [materialOptions, setMaterialOptions] = useState([]);\r\n    const [selectedMaterial, setSelectedMaterial] = useState(\"\");\r\n    const [countryOptions, setCountryOptions] = useState([]);\r\n    const [selectedCountry, setSelectedCountry] = useState(\"\");\r\n    const [collarOptions, setCollarOptions] = useState([]);\r\n    const [selectedCollar, setSelectedCollar] = useState(\"\");\r\n    const [sleeveOptions, setSleeveOptions] = useState([]);\r\n    const [selectedSleeve, setSelectedSleeve] = useState(\"\");\r\n    const [colorOptions, setColorOptions] = useState([]);\r\n    const [colors, setColors] = useState([]);\r\n    const [sizeOptions, setSizeOptions] = useState([]);\r\n    const [sizes, setSizes] = useState([]);\r\n    const [showImageModal, setShowImageModal] = useState(false);\r\n    const [modalColor, setModalColor] = useState(\"\");\r\n    const [selectedImages, setSelectedImages] = useState({});\r\n    const [tempImages, setTempImages] = useState([]);\r\n    const [imageOptions, setImageOptions] = useState([]);\r\n    const [addLoading, setAddLoading] = useState(false);\r\n    const [productVariants, setProductVariants] = useState([]);\r\n    const [createdSanPhamId, setCreatedSanPhamId] = useState(null);\r\n    const [checkedRows, setCheckedRows] = useState({});\r\n    const [quickWeight, setQuickWeight] = useState({});\r\n    const [quickQty, setQuickQty] = useState({});\r\n    const [quickPrice, setQuickPrice] = useState({});\r\n    const [showAddProductModal, setShowAddProductModal] = useState(false);\r\n    const [newProductName, setNewProductName] = useState(\"\");\r\n    const [newProductCategory, setNewProductCategory] = useState(\"\");\r\n    const [newProductDesc, setNewProductDesc] = useState(\"\");\r\n    const [addProductLoading, setAddProductLoading] = useState(false);\r\n    const [addError, setAddError] = useState(\"\"); // SỬA: THÊM KHAI BÁO useState CHO addError\r\n    const [addSuccess, setAddSuccess] = useState(\"\");\r\n    const autoFocusRef = useRef(null);\r\n    const [newProductCountry, setNewProductCountry] = useState(\"\");\r\n    const [addProductValidate, setAddProductValidate] = useState({});\r\n    const [isCheckedAllGlobal, setIsCheckedAllGlobal] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (showAddProductModal && autoFocusRef.current) {\r\n            autoFocusRef.current.focus();\r\n        }\r\n    }, [showAddProductModal]);\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl(\"/danhMuc/all\"))\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const opts = Array.isArray(data)\r\n                    ? data\r\n                        .sort((a, b) => b.id - a.id)\r\n                        .map((item) => ({\r\n                            value: item.id,\r\n                            label: item.tenDanhMuc ? item.tenDanhMuc : item,\r\n                        }))\r\n                    : [];\r\n                setCategoryOptions(opts);\r\n                if (opts[0]) setSelectedCategory(opts[0].value);\r\n            })\r\n            .catch(() => setCategoryOptions([]));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl(\"/thuongHieu/all\"))\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const opts = Array.isArray(data)\r\n                    ? data\r\n                        .sort((a, b) => b.id - a.id)\r\n                        .map((item) => ({\r\n                            value: item.id,\r\n                            label: item.tenThuongHieu ? item.tenThuongHieu : item,\r\n                        }))\r\n                    : [];\r\n                setBrandOptions(opts);\r\n                if (opts[0]) setSelectedBrand(opts[0].value);\r\n            })\r\n            .catch(() => setBrandOptions([]));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl(\"/chatLieu/all\"))\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                let opts = [];\r\n                if (Array.isArray(data)) {\r\n                    if (typeof data[0] === \"string\") {\r\n                        opts = [...data].reverse().map((name, idx) => ({ value: idx + 1, label: name }));\r\n                    } else {\r\n                        opts = data.sort((a, b) => b.id - a.id).map((item) => ({\r\n                            value: item.id,\r\n                            label: item.tenChatLieu ? item.tenChatLieu : item,\r\n                        }));\r\n                    }\r\n                }\r\n                setMaterialOptions(opts);\r\n                if (opts[0]) setSelectedMaterial(opts[0].value);\r\n            })\r\n            .catch(() => setMaterialOptions([]));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl(\"/xuatXu/quocGia\"))\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const opts = Array.isArray(data)\r\n                    ? data.map((item, idx) => ({\r\n                        value: item.name ? item.name : item ? item : idx,\r\n                        label: item.name ? item.name : item,\r\n                    }))\r\n                    : [];\r\n                setCountryOptions(opts);\r\n                if (opts[0]) setSelectedCountry(opts[0].value);\r\n            })\r\n            .catch(() => setCountryOptions([]));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl(\"/coAo/all\"))\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const opts = Array.isArray(data)\r\n                    ? data\r\n                        .sort((a, b) =>\r\n                            typeof a.id === \"number\" && typeof b.id === \"number\"\r\n                                ? b.id - a.id\r\n                                : 0\r\n                        )\r\n                        .map((item) =>\r\n                            typeof item === \"string\"\r\n                                ? { value: item, label: item }\r\n                                : {\r\n                                    value: item.id,\r\n                                    label: item.tenCoAo ? item.tenCoAo : item.label ? item.label : item,\r\n                                }\r\n                        )\r\n                    : [];\r\n                setCollarOptions(opts);\r\n                if (opts[0]) setSelectedCollar(opts[0].value);\r\n            })\r\n            .catch(() => setCollarOptions([]));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl(\"/tayAo/all\"))\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const opts = Array.isArray(data)\r\n                    ? data\r\n                        .sort((a, b) =>\r\n                            typeof a.id === \"number\" && typeof b.id === \"number\"\r\n                                ? b.id - a.id\r\n                                : 0\r\n                        )\r\n                        .map((item) =>\r\n                            typeof item === \"string\"\r\n                                ? { value: item, label: item }\r\n                                : {\r\n                                    value: item.id,\r\n                                    label: item.tenTayAo ? item.tenTayAo : item.label ? item.label : item,\r\n                                }\r\n                        )\r\n                    : [];\r\n                setSleeveOptions(opts);\r\n                if (opts[0]) setSelectedSleeve(opts[0].value);\r\n            })\r\n            .catch(() => setSleeveOptions([]));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch(apiUrl(\"/mauSac/all\"))\r\n            .then((res) => res.json())\r\n            .then((data) =>\r\n                setColorOptions(\r\n                    Array.isArray(data)\r\n                        ? data\r\n                            .sort((a, b) => b.id - a.id)\r\n                            .map((item) => ({\r\n                                value: item.id,\r\n                                label: item.tenMauSac,\r\n                            }))\r\n                        : []\r\n                )\r\n            )\r\n            .catch(() => setColorOptions([]));\r\n\r\n        fetch(apiUrl(\"/kichThuoc/all\"))\r\n            .then((res) => res.json())\r\n            .then((data) =>\r\n                setSizeOptions(\r\n                    Array.isArray(data)\r\n                        ? data\r\n                            .sort((a, b) =>\r\n                                typeof a.id === \"number\" && typeof b.id === \"number\"\r\n                                    ? b.id - a.id\r\n                                    : 0\r\n                            )\r\n                            .map((item) =>\r\n                                typeof item === \"string\"\r\n                                    ? { value: item, label: item }\r\n                                    : {\r\n                                        value: item.id,\r\n                                        label: item.tenKichCo ? item.tenKichCo : item.label ? item.label : item,\r\n                                    }\r\n                            )\r\n                        : []\r\n                )\r\n            )\r\n            .catch(() => setSizeOptions([]));\r\n\r\n        fetch(apiUrl(\"/hinhAnh/all\"))\r\n            .then((res) => res.json())\r\n            .then((data) =>\r\n                setImageOptions(\r\n                    Array.isArray(data)\r\n                        ? data\r\n                            .sort((a, b) => b.id - a.id)\r\n                            .map((item) => ({\r\n                                value: item.id,\r\n                                label: item.moTa ? item.moTa : `Ảnh ${item.id}`,\r\n                                url: normalizeUrl(item.duongDanAnh),\r\n                            }))\r\n                        : []\r\n                )\r\n            )\r\n            .catch(() => setImageOptions([]));\r\n\r\n        fetch(apiUrl(\"/sanPham/all-ten\"))\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                const uniqueNames = Array.isArray(data)\r\n                    ? data.filter(Boolean).map((name) => name.trim())\r\n                    : [];\r\n                const opts = uniqueNames.map((name) => ({\r\n                    value: name,\r\n                    label: name,\r\n                }));\r\n                setProductNameOptions(opts);\r\n                if (opts[0]) setProductName(opts[0].value);\r\n            })\r\n            .catch(() => setProductNameOptions([]));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setProductVariants(getProductVariantsByColors(colors, sizes, productName));\r\n    }, [JSON.stringify(colors), JSON.stringify(sizes), productName]);\r\n\r\n    useEffect(() => {\r\n        generateMaSanPhamUnique().then(setProductCode);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (productName) {\r\n            fetch(apiUrl(`/sanPham/search?keyword=${encodeURIComponent(productName)}`))\r\n                .then(res => res.json())\r\n                .then(async data => {\r\n                    if (Array.isArray(data) && data.length > 0) {\r\n                        const prod = data[0];\r\n                        setCreatedSanPhamId(prod.id);\r\n                        setProductDesc(prod.moTa ? prod.moTa : \"\");\r\n                        setSelectedCategory(prod.idDanhMuc ? prod.idDanhMuc : \"\");\r\n                        setSelectedCountry(prod.xuatXu ? prod.xuatXu : \"\");\r\n                        setProductCode(prod.maSanPham ? prod.maSanPham : await generateMaSanPhamUnique());\r\n                    } else {\r\n                        setCreatedSanPhamId(null);\r\n                        setProductDesc(\"\");\r\n                        setSelectedCategory(categoryOptions[0]?.value || \"\");\r\n                        setSelectedCountry(countryOptions[0]?.value || \"\");\r\n                        setProductCode(await generateMaSanPhamUnique());\r\n                    }\r\n                });\r\n        }\r\n    }, [productName]);\r\n\r\n    const handleProductNameChange = (opt) => {\r\n        const name = opt ? opt.value : \"\";\r\n        setProductName(name);\r\n    };\r\n\r\n    const handleVariantValueChange = (colorIdx, prodIdx, field, value) => {\r\n        setProductVariants((prev) => {\r\n            const newArr = [...prev];\r\n            newArr[colorIdx] = {\r\n                ...newArr[colorIdx],\r\n                products: newArr[colorIdx].products.map((p, idx) =>\r\n                    idx === prodIdx\r\n                        ? field === \"price\"\r\n                            ? { ...p, price: parseCurrencyVND(value) }\r\n                            : { ...p, [field]: value }\r\n                        : p\r\n                ),\r\n            };\r\n            return newArr;\r\n        });\r\n    };\r\n\r\n    const handleCheckRow = (colorIdx, prodIdx) => {\r\n        setCheckedRows((prev) => {\r\n            const list = prev[colorIdx] || [];\r\n            if (list.includes(prodIdx)) {\r\n                return { ...prev, [colorIdx]: list.filter((i) => i !== prodIdx) };\r\n            }\r\n            return { ...prev, [colorIdx]: [...list, prodIdx] };\r\n        });\r\n    };\r\n\r\n    const handleCheckAllRowsGlobal = (checked) => {\r\n        setIsCheckedAllGlobal(checked);\r\n        if (checked) {\r\n            const checkedAllRows = {};\r\n            productVariants.forEach((variant, colorIdx) => {\r\n                checkedAllRows[colorIdx] = variant.products.map((_, prodIdx) => prodIdx);\r\n            });\r\n            setCheckedRows(checkedAllRows);\r\n        } else {\r\n            setCheckedRows({});\r\n            setQuickWeight({});\r\n            setQuickQty({});\r\n            setQuickPrice({});\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (isCheckedAllGlobal) {\r\n            setProductVariants(prev =>\r\n                prev.map(variant => ({\r\n                    ...variant,\r\n                    products: variant.products.map(prod => ({\r\n                        ...prod,\r\n                        weight: quickWeight.global,\r\n                        qty: quickQty.global,\r\n                        price: quickPrice.global\r\n                    }))\r\n                }))\r\n            );\r\n        }\r\n    }, [quickWeight.global, quickQty.global, quickPrice.global, isCheckedAllGlobal]);\r\n\r\n\r\n\r\n    const openImageModal = (colorId) => {\r\n        setModalColor(\"all\");\r\n        setShowImageModal(true);\r\n        setTempImages(Object.values(selectedImages).flat());\r\n    };\r\n\r\n    const closeImageModal = () => setShowImageModal(false);\r\n    const handleSaveImages = () => {\r\n        // Lưu ảnh chọn dùng chung cho tất cả sản phẩm chi tiết các màu\r\n        setSelectedImages({ all: [...tempImages] });\r\n        closeImageModal();\r\n    };\r\n    const toggleTempImage = (imgId) => {\r\n        setTempImages(sel =>\r\n            sel.includes(imgId)\r\n                ? sel.filter(id => id !== imgId)\r\n                : [...sel, imgId]\r\n        );\r\n    };\r\n    const findId = (arr, value) => {\r\n        const item = arr.find(\r\n            (x) => `${x.value}` === `${value}` || x.label === value\r\n        );\r\n        return item ? item.value : null;\r\n    };\r\n\r\n    const handleAddProduct = async (e) => {\r\n        e.preventDefault();\r\n        setAddError(\"\"); // SỬA: ĐỔI TỪ setAddProductError thành setAddError nếu đang dùng addError\r\n        setAddSuccess(\"\");\r\n        setAddLoading(true);\r\n\r\n        const errors = {};\r\n        if (!productName || !productName.trim()) errors.productName = \"Tên sản phẩm không được để trống\";\r\n        if (!selectedBrand) errors.selectedBrand = \"Thương hiệu không được để trống\";\r\n        if (!selectedMaterial) errors.selectedMaterial = \"Chất liệu không được để trống\";\r\n        if (!selectedCollar) errors.selectedCollar = \"Cổ áo không được để trống\";\r\n        if (!selectedSleeve) errors.selectedSleeve = \"Tay áo không được để trống\";\r\n        if (!colors.length) errors.colors = \"Màu sắc không được để trống\";\r\n        if (!sizes.length) errors.sizes = \"Kích thước không được để trống\";\r\n        if (!selectedCategory) errors.selectedCategory = \"Danh mục không được để trống\";\r\n        if (!selectedCountry) errors.selectedCountry = \"Xuất xứ không được để trống\";\r\n\r\n        if (Object.keys(errors).length > 0) {\r\n            setAddProductValidate(errors);\r\n            setAddLoading(false);\r\n            toast.error(Object.values(errors)[0]);\r\n            return;\r\n        }\r\n\r\n        if (createdSanPhamId) {\r\n            setAddSuccess(\"Chọn sản phẩm thành công!\");\r\n            setShowAttributes(true);\r\n            setAddLoading(false);\r\n            toast.success(\"Chọn sản phẩm thành công!\");\r\n            return;\r\n        }\r\n\r\n        const data = {\r\n            maSanPham: productCode,\r\n            tenSanPham: productName,\r\n            xuatXu: selectedCountry,\r\n            trangThai: 1,\r\n            idDanhMuc: selectedCategory\r\n        };\r\n\r\n        try {\r\n            const res = await fetch(apiUrl(\"/sanPham\"), {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(data),\r\n            });\r\n            if (!res.ok) throw new Error(\"Lỗi khi thêm sản phẩm\");\r\n            const result = await res.json();\r\n            setCreatedSanPhamId(result.id ? result.id : result);\r\n            setAddSuccess(\"Thêm sản phẩm thành công!\");\r\n            setShowAttributes(true);\r\n            toast.success(\"Thêm sản phẩm thành công!\");\r\n        } catch (err) {\r\n            setAddError(\"Thêm sản phẩm thất bại!\");\r\n            toast.error(\"Thêm sản phẩm thất bại!\");\r\n        }\r\n        setAddLoading(false);\r\n    };\r\n\r\n    const handleAddProductDetail = async () => {\r\n        setAddError(\"\");\r\n        setAddSuccess(\"\");\r\n        setAddLoading(true);\r\n\r\n        const errors = {};\r\n        if (!productName || !productName.trim()) errors.productName = \"Tên sản phẩm không được để trống\";\r\n        if (!selectedMaterial) errors.selectedMaterial = \"Chất liệu không được để trống\";\r\n        if (!selectedBrand) errors.selectedBrand = \"Thương hiệu không được để trống\";\r\n        if (!colors.length) errors.colors = \"Màu sắc không được để trống\";\r\n        if (!sizes.length) errors.sizes = \"Kích thước không được để trống\";\r\n        if (!selectedCollar) errors.selectedCollar = \"Cổ áo không được để trống\";\r\n        if (!selectedSleeve) errors.selectedSleeve = \"Tay áo không được để trống\";\r\n\r\n        for (let variant of productVariants) {\r\n            for (let prod of variant.products) {\r\n                if (!prod.weight || isNaN(prod.weight) || Number(prod.weight) <= 0) {\r\n                    errors.weight = \"Trọng lượng phải lớn hơn 0\";\r\n                }\r\n                if (prod.qty === \"\" || prod.qty === null || isNaN(prod.qty) || Number(prod.qty) < 0) {\r\n                    errors.qty = \"Số lượng phải lớn hơn hoặc bằng 0\";\r\n                }\r\n                if (!prod.price || isNaN(prod.price) || Number(prod.price) <= 0) {\r\n                    errors.price = \"Giá phải lớn hơn 0\";\r\n                }\r\n            }\r\n        }\r\n\r\n        if (Object.keys(errors).length > 0) {\r\n            setAddError(Object.values(errors)[0]);\r\n            toast.error(Object.values(errors)[0]);\r\n            setAddLoading(false);\r\n            return;\r\n        }\r\n\r\n        const existedMaChiTietList = await fetchAllMaSanPhamChiTiet();\r\n        const chiTietSanPhams = [];\r\n        const chiTietSanPhamIndexMap = [];\r\n        productVariants.forEach((variant, colorIdx) => {\r\n            variant.products.forEach((prod, prodIdx) => {\r\n                const maChiTiet = getUniqueMaSanPhamChiTiet(\r\n                    productCode,\r\n                    variant.colorId,\r\n                    prod.sizeId,\r\n                    existedMaChiTietList\r\n                );\r\n                chiTietSanPhams.push({\r\n                    idSanPham: createdSanPhamId,\r\n                    idChatLieu: selectedMaterial,\r\n                    idThuongHieu: selectedBrand,\r\n                    idMauSac: findId(colorOptions, variant.colorId),\r\n                    idKichThuoc: findId(sizeOptions, prod.sizeId),\r\n                    idCoAo: selectedCollar,\r\n                    idTayAo: selectedSleeve,\r\n                    gia: Number(prod.price),\r\n                    soLuong: Number(prod.qty),\r\n                    trongLuong: Number(prod.weight),\r\n                    maSanPhamChiTiet: maChiTiet,\r\n                    moTa: \"\",\r\n                    trangThai: 1,\r\n                });\r\n                chiTietSanPhamIndexMap.push({\r\n                    colorId: variant.colorId,\r\n                    sizeId: prod.sizeId,\r\n                    idxInVariants: { colorIdx: colorIdx, prodIdx: prodIdx },\r\n                });\r\n            });\r\n        });\r\n\r\n        try {\r\n            const addDetailPromises = chiTietSanPhams.map((ctsp) =>\r\n                fetch(apiUrl(\"/chiTietSanPham\"), {\r\n                    method: \"POST\",\r\n                    headers: { \"Content-Type\": \"application/json\" },\r\n                    body: JSON.stringify(ctsp),\r\n                }).then((res) => {\r\n                    if (!res.ok) throw new Error(\"Lỗi khi thêm chi tiết sản phẩm\");\r\n                    return res.json();\r\n                })\r\n            );\r\n            const chiTietSanPhamResults = await Promise.all(addDetailPromises);\r\n            setAddSuccess(\"Thêm chi tiết sản phẩm thành công!\");\r\n            toast.success(\"Thêm chi tiết sản phẩm thành công!\");\r\n            setTimeout(() => {\r\n                navigate(\"/SanPham\");\r\n            }, 1000);\r\n\r\n            const saveImagePromises = [];\r\n            chiTietSanPhamResults.forEach((ctspResult, idx) => {\r\n                const { colorId } = chiTietSanPhamIndexMap[idx];\r\n                const imgList = selectedImages[colorId] || [];\r\n                imgList.forEach((imgId) => {\r\n                    const img = imageOptions.find((i) => i.value === imgId);\r\n                    if (!img) return;\r\n                    saveImagePromises.push(\r\n                        fetch(apiUrl(`/hinhAnh/${img.value}`), {\r\n                            method: \"PUT\",\r\n                            headers: {\r\n                                \"Content-Type\": \"application/json\",\r\n                            },\r\n                            body: JSON.stringify({\r\n                                maAnh: img.label ? img.label : `Ảnh ${img.value}`,\r\n                                duongDanAnh: img.url,\r\n                                anhMacDinh: 0,\r\n                                moTa: img.label ? img.label : \"\",\r\n                                trangThai: 1,\r\n                                idSanPhamChiTiet: ctspResult.id ? ctspResult.id : ctspResult,\r\n                                idSanPham: createdSanPhamId,\r\n                            }),\r\n                        })\r\n                    );\r\n                });\r\n            });\r\n            await Promise.all(saveImagePromises);\r\n        } catch (err) {\r\n            setAddError(\"Thêm chi tiết sản phẩm thất bại!\");\r\n            toast.error(\"Thêm chi tiết sản phẩm thất bại!\");\r\n        }\r\n        setAddLoading(false);\r\n    };\r\n\r\n    const handleOpenAddProductModal = async () => {\r\n        setShowAddProductModal(true);\r\n        setNewProductName(\"\");\r\n        setNewProductCategory(selectedCategory ? selectedCategory : \"\");\r\n        setNewProductCountry(selectedCountry ? selectedCountry : \"\");\r\n        setNewProductDesc(\"\");\r\n        setAddError(\"\"); // SỬA: ĐỔI TỪ setAddProductError thành setAddError nếu đang dùng addError\r\n        setAddSuccess(\"\");\r\n        setAddProductValidate({});\r\n        const code = await generateMaSanPhamUnique();\r\n        setProductCode(code);\r\n    };\r\n\r\n    const handleAddNewProduct = async () => {\r\n        setAddProductLoading(true);\r\n        setAddError(\"\"); // SỬA: ĐỔI TỪ setAddProductError thành setAddError nếu đang dùng addError\r\n        setAddSuccess(\"\");\r\n        const errors = {};\r\n        if (!newProductName || !newProductName.trim()) errors.newProductName = \"Tên sản phẩm không được để trống\";\r\n        if (!newProductCategory) errors.newProductCategory = \"Vui lòng chọn danh mục\";\r\n        if (!newProductCountry) errors.newProductCountry = \"Vui lòng chọn xuất xứ\";\r\n        setAddProductValidate(errors);\r\n        if (Object.keys(errors).length > 0) {\r\n            setAddProductLoading(false);\r\n            toast.error(Object.values(errors)[0]);\r\n            return;\r\n        }\r\n        const productData = {\r\n            maSanPham: await generateMaSanPhamUnique(),\r\n            tenSanPham: newProductName,\r\n            idDanhMuc: newProductCategory,\r\n            xuatXu: newProductCountry,\r\n            moTa: newProductDesc,\r\n            trangThai: 1\r\n        };\r\n        try {\r\n            const res = await fetch(apiUrl(\"/sanPham\"), {\r\n                method: \"POST\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(productData),\r\n            });\r\n            if (!res.ok) throw new Error(\"Lỗi khi thêm sản phẩm mới\");\r\n            await res.json();\r\n            setAddSuccess(\"Thêm sản phẩm mới thành công!\");\r\n            toast.success(\"Thêm sản phẩm mới thành công!\");\r\n\r\n            setTimeout(() => {\r\n                setShowAddProductModal(false);\r\n                setAddSuccess(\"\");\r\n                fetch(apiUrl(\"/sanPham/all-ten\"))\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        const uniqueNames = Array.isArray(data)\r\n                            ? data.filter(Boolean).map((name) => name.trim())\r\n                            : [];\r\n                        const opts = uniqueNames.map((name) => ({\r\n                            value: name,\r\n                            label: name,\r\n                        }));\r\n                        setProductNameOptions(opts);\r\n                        if (opts[0]) setProductName(opts[0].value);\r\n                    });\r\n            }, 1200);\r\n        } catch (err) {\r\n            setAddError(\"Thêm sản phẩm mới thất bại!\");\r\n            toast.error(\"Thêm sản phẩm mới thất bại!\");\r\n        }\r\n        setAddProductLoading(false);\r\n    };\r\n\r\n    return (\r\n        <DashboardLayout>\r\n            <DashboardNavbar />\r\n            <SoftBox\r\n                py={3}\r\n                sx={{\r\n                    background: \"#F4F6FB\",\r\n                    minHeight: \"100vh\",\r\n                    userSelect: \"none\",\r\n                }}\r\n            >\r\n                <Card\r\n                    sx={{\r\n                        p: { xs: 2, md: 4 },\r\n                        mb: 2,\r\n                        maxWidth: \"1400px\",\r\n                        margin: \"0 auto\",\r\n                        boxShadow: 12,\r\n                        borderRadius: 5,\r\n                        background: \"linear-gradient(145deg,#fff 65%,#e3f0fa 130%)\",\r\n                    }}\r\n                >\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        color=\"#1976d2\"\r\n                        fontWeight=\"bold\"\r\n                        mb={3}\r\n                        letterSpacing={1}\r\n                        textAlign=\"center\"\r\n                    >\r\n                        Thêm Sản Phẩm Mới\r\n                    </Typography>\r\n                    <form onSubmit={handleAddProduct}>\r\n                        <Grid container spacing={2}>\r\n                            <Grid item xs={12}>\r\n                                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                                    <label htmlFor=\"product-name\" style={{ fontWeight: \"bold\", marginBottom: 4, display: \"block\" }}>\r\n                                        Tên sản phẩm <span style={{ color: \"red\" }}>*</span>\r\n                                    </label>\r\n                                    <Box sx={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", gap: 2 }}>\r\n                                        <Box flex={1} sx={{ mr: 1 }}>\r\n                                            <CreatableSelect\r\n                                                inputId=\"product-name-input\"\r\n                                                options={productNameOptions}\r\n                                                value={\r\n                                                    productName\r\n                                                        ? { value: productName, label: productName }\r\n                                                        : null\r\n                                                }\r\n                                                onChange={handleProductNameChange}\r\n                                                onInputChange={(inputValue, { action }) => {\r\n                                                    if (action === \"input-change\") setProductName(inputValue);\r\n                                                }}\r\n                                                placeholder=\"Chọn hoặc nhập tên sản phẩm\"\r\n                                                isClearable\r\n                                                isSearchable\r\n                                                formatCreateLabel={(inputValue) => `Thêm mới: ${inputValue}`}\r\n                                                noOptionsMessage={() => \"Không có sản phẩm, nhập tên mới để thêm\"}\r\n                                                styles={selectMenuStyle}\r\n                                            />\r\n                                        </Box>\r\n                                        <Tooltip title=\"Tạo sản phẩm mới nhanh\">\r\n                                            <Button\r\n                                                variant=\"outlined\"\r\n                                                size=\"large\"\r\n                                                sx={{\r\n                                                    borderRadius: 3,\r\n                                                    textTransform: \"none\",\r\n                                                    fontWeight: 500,\r\n                                                    color: \"#1976d2\",\r\n                                                    borderColor: \"#90caf9\",\r\n                                                    minWidth: 44,\r\n                                                    minHeight: 44,\r\n                                                    p: 0,\r\n                                                    boxShadow: \"none\",\r\n                                                    display: \"flex\",\r\n                                                    alignItems: \"center\",\r\n                                                    justifyContent: \"center\",\r\n                                                    \"&:hover\": {\r\n                                                        borderColor: \"#1769aa\",\r\n                                                        background: \"#f0f6fd\",\r\n                                                        color: \"#1769aa\",\r\n                                                    },\r\n                                                }}\r\n                                                onClick={handleOpenAddProductModal}\r\n                                            >\r\n                                                <FaPlus size={22} />\r\n                                            </Button>\r\n                                        </Tooltip>\r\n                                    </Box>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                                    <label htmlFor=\"brand-input\" style={{ fontWeight: \"bold\", marginBottom: 4, display: \"block\" }}>\r\n                                        Thương hiệu\r\n                                    </label>\r\n                                    <CreatableSelect\r\n                                        inputId=\"brand-input\"\r\n                                        options={brandOptions}\r\n                                        value={\r\n                                            selectedBrand\r\n                                                ? {\r\n                                                    value: selectedBrand,\r\n                                                    label: getLabelById(brandOptions, selectedBrand),\r\n                                                }\r\n                                                : null\r\n                                        }\r\n                                        onChange={(opt) => setSelectedBrand(opt ? opt.value : \"\")}\r\n                                        onInputChange={(inputValue, { action }) => {\r\n                                            if (action === \"input-change\") setSelectedBrand(inputValue);\r\n                                        }}\r\n                                        placeholder=\"Chọn hoặc nhập thương hiệu\"\r\n                                        isClearable\r\n                                        isSearchable\r\n                                        formatCreateLabel={(inputValue) => `Thêm mới: ${inputValue}`}\r\n                                        noOptionsMessage={() => \"Không có thương hiệu, nhập tên mới để thêm\"}\r\n                                        styles={selectMenuStyle}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                                    <label htmlFor=\"material-input\" style={{ fontWeight: \"bold\", marginBottom: 4, display: \"block\" }}>\r\n                                        Chất liệu\r\n                                    </label>\r\n                                    <CreatableSelect\r\n                                        inputId=\"material-input\"\r\n                                        options={materialOptions}\r\n                                        value={\r\n                                            selectedMaterial\r\n                                                ? {\r\n                                                    value: selectedMaterial,\r\n                                                    label: getLabelById(materialOptions, selectedMaterial),\r\n                                                }\r\n                                                : null\r\n                                        }\r\n                                        onChange={(opt) => setSelectedMaterial(opt ? opt.value : \"\")}\r\n                                        onInputChange={(inputValue, { action }) => {\r\n                                            if (action === \"input-change\") setSelectedMaterial(inputValue);\r\n                                        }}\r\n                                        placeholder=\"Chọn hoặc nhập chất liệu\"\r\n                                        isClearable\r\n                                        isSearchable\r\n                                        formatCreateLabel={(inputValue) => `Thêm mới: ${inputValue}`}\r\n                                        noOptionsMessage={() => \"Không có chất liệu, nhập tên mới để thêm\"}\r\n                                        styles={selectMenuStyle}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                                    <label htmlFor=\"collar-input\" style={{ fontWeight: \"bold\", marginBottom: 4, display: \"block\" }}>\r\n                                        Cổ áo\r\n                                    </label>\r\n                                    <CreatableSelect\r\n                                        inputId=\"collar-input\"\r\n                                        options={collarOptions}\r\n                                        value={\r\n                                            selectedCollar\r\n                                                ? {\r\n                                                    value: selectedCollar,\r\n                                                    label: getLabelById(collarOptions, selectedCollar),\r\n                                                }\r\n                                                : null\r\n                                        }\r\n                                        onChange={(opt) => setSelectedCollar(opt ? opt.value : \"\")}\r\n                                        onInputChange={(inputValue, { action }) => {\r\n                                            if (action === \"input-change\") setSelectedCollar(inputValue);\r\n                                        }}\r\n                                        placeholder=\"Chọn hoặc nhập cổ áo\"\r\n                                        isClearable\r\n                                        isSearchable\r\n                                        formatCreateLabel={(inputValue) => `Thêm mới: ${inputValue}`}\r\n                                        noOptionsMessage={() => \"Không có cổ áo, nhập tên mới để thêm\"}\r\n                                        styles={selectMenuStyle}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                                    <label htmlFor=\"sleeve-input\" style={{ fontWeight: \"bold\", marginBottom: 4, display: \"block\" }}>\r\n                                        Tay áo\r\n                                    </label>\r\n                                    <CreatableSelect\r\n                                        inputId=\"sleeve-input\"\r\n                                        options={sleeveOptions}\r\n                                        value={\r\n                                            selectedSleeve\r\n                                                ? {\r\n                                                    value: selectedSleeve,\r\n                                                    label: getLabelById(sleeveOptions, selectedSleeve),\r\n                                                }\r\n                                                : null\r\n                                        }\r\n                                        onChange={(opt) => setSelectedSleeve(opt ? opt.value : \"\")}\r\n                                        onInputChange={(inputValue, { action }) => {\r\n                                            if (action === \"input-change\") setSelectedSleeve(inputValue);\r\n                                        }}\r\n                                        placeholder=\"Chọn hoặc nhập tay áo\"\r\n                                        isClearable\r\n                                        isSearchable\r\n                                        formatCreateLabel={(inputValue) => `Thêm mới: ${inputValue}`}\r\n                                        noOptionsMessage={() => \"Không có tay áo, nhập tên mới để thêm\"}\r\n                                        styles={selectMenuStyle}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                                    <label htmlFor=\"color-input\" style={{ fontWeight: \"bold\", marginBottom: 4, display: \"block\" }}>\r\n                                        Màu sắc\r\n                                    </label>\r\n                                    <Select\r\n                                        inputId=\"color-input\"\r\n                                        isMulti\r\n                                        options={colorOptions}\r\n                                        value={colorOptions.filter((o) => colors.includes(o.value))}\r\n                                        onChange={(opts) =>\r\n                                            setColors(opts ? opts.map((opt) => opt.value) : [])\r\n                                        }\r\n                                        placeholder=\"Chọn nhiều màu sắc\"\r\n                                        closeMenuOnSelect={false}\r\n                                        styles={selectMenuStyle}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <FormControl fullWidth sx={{ mb: 2 }}>\r\n                                    <label htmlFor=\"size-input\" style={{ fontWeight: \"bold\", marginBottom: 4, display: \"block\" }}>\r\n                                        Kích cỡ\r\n                                    </label>\r\n                                    <Select\r\n                                        inputId=\"size-input\"\r\n                                        isMulti\r\n                                        options={sizeOptions}\r\n                                        value={sizeOptions.filter((o) => sizes.includes(o.value))}\r\n                                        onChange={(opts) =>\r\n                                            setSizes(opts ? opts.map((opt) => opt.value) : [])\r\n                                        }\r\n                                        placeholder=\"Chọn nhiều kích cỡ\"\r\n                                        closeMenuOnSelect={false}\r\n                                        styles={selectMenuStyle}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <SoftBox my={4}>\r\n                            <SoftBox textAlign=\"right\" mb={2}>\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"success\"\r\n                                    size=\"large\"\r\n                                    onClick={handleAddProductDetail}\r\n                                    sx={{ fontWeight: 600, px: 4, fontSize: 17, borderRadius: 3, boxShadow: 3 }}\r\n                                >\r\n                                    {addLoading && (\r\n                                        <CircularProgress size={22} color=\"inherit\" sx={{ mr: 1 }} />\r\n                                    )}\r\n                                    Thêm sản phẩm chi tiết\r\n                                </Button>\r\n                            </SoftBox>\r\n                            {productVariants.map((variant, colorIdx) => {\r\n                                const allChecked =\r\n                                    checkedRows[colorIdx]?.length === variant.products.length;\r\n                                return (\r\n                                    <Card\r\n                                        key={colorIdx}\r\n                                        sx={{\r\n                                            mb: 2.5,\r\n                                            borderRadius: 3,\r\n                                            boxShadow: 2,\r\n                                            p: 2.5,\r\n                                            background: \"#fff\",\r\n                                            userSelect: \"none\",\r\n                                            borderLeft: \"7px solid #1976d2\",\r\n                                        }}\r\n                                    >\r\n                                        <Box\r\n                                            display=\"flex\"\r\n                                            alignItems=\"center\"\r\n                                            mb={2}\r\n                                            flexWrap=\"wrap\"\r\n                                            gap={2}\r\n                                        >\r\n                                            <SoftBox\r\n                                                fontWeight=\"bold\"\r\n                                                sx={{ color: \"#1976d2\", fontSize: 16, mr: 2 }}\r\n                                            >\r\n                                                {`Màu: ${getLabelById(colorOptions, variant.colorId)}`}\r\n                                            </SoftBox>\r\n                                            <FormControl sx={{ verticalAlign: \"middle\" }}>\r\n                                                <Tooltip title={isCheckedAllGlobal ? \"Bỏ chọn tất cả\" : \"Chọn tất cả\"}>\r\n                                                    <input\r\n                                                        type=\"checkbox\"\r\n                                                        checked={isCheckedAllGlobal}\r\n                                                        onChange={() => handleCheckAllRowsGlobal(!isCheckedAllGlobal)}\r\n                                                        style={{\r\n                                                            transform: \"scale(1.3)\",\r\n                                                            marginRight: 5,\r\n                                                            verticalAlign: \"middle\",\r\n                                                        }}\r\n                                                    />\r\n                                                </Tooltip>\r\n                                                <span style={{ fontWeight: 400, fontSize: 14 }}>Chọn tất cả</span>\r\n                                            </FormControl>\r\n                                            {isCheckedAllGlobal && colorIdx === 0 && (\r\n                                                <Box\r\n                                                    display=\"flex\"\r\n                                                    alignItems=\"center\"\r\n                                                    gap={2}\r\n                                                    sx={{\r\n                                                        background: \"#f4f7fd\",\r\n                                                        borderRadius: 2,\r\n                                                        px: 2,\r\n                                                        py: 1,\r\n                                                        ml: 2,\r\n                                                    }}\r\n                                                >\r\n                                                    <FormControl sx={{ minWidth: 120, mr: 2 }}>\r\n                                                        <label htmlFor=\"quick-global-weight\" style={{ fontWeight: 400, fontSize: 13, marginBottom: 4, display: \"block\" }}>\r\n                                                            Trọng lượng (g)\r\n                                                        </label>\r\n                                                        <Input\r\n                                                            id=\"quick-global-weight\"\r\n                                                            type=\"text\"\r\n                                                            value={quickWeight.global ?? \"\"}\r\n                                                            onChange={e =>\r\n                                                                setQuickWeight(prev => ({ ...prev, global: e.target.value }))\r\n                                                            }\r\n                                                            size=\"small\"\r\n                                                            sx={{ width: 110, background: \"#fff\" }}\r\n                                                            placeholder=\"VD: 300\"\r\n                                                        />\r\n                                                    </FormControl>\r\n                                                    <FormControl sx={{ minWidth: 120, mr: 2 }}>\r\n                                                        <label htmlFor=\"quick-global-qty\" style={{ fontWeight: 400, fontSize: 13, marginBottom: 4, display: \"block\" }}>\r\n                                                            Số lượng\r\n                                                        </label>\r\n                                                        <Input\r\n                                                            id=\"quick-global-qty\"\r\n                                                            type=\"text\"\r\n                                                            value={quickQty.global ?? \"\"}\r\n                                                            onChange={e =>\r\n                                                                setQuickQty(prev => ({ ...prev, global: e.target.value }))\r\n                                                            }\r\n                                                            size=\"small\"\r\n                                                            sx={{ width: 110, background: \"#fff\" }}\r\n                                                            placeholder=\"VD: 20\"\r\n                                                        />\r\n                                                    </FormControl>\r\n                                                    <FormControl sx={{ minWidth: 120 }}>\r\n                                                        <label htmlFor=\"quick-global-price\" style={{ fontWeight: 400, fontSize: 13, marginBottom: 4, display: \"block\" }}>\r\n                                                            Giá (₫)\r\n                                                        </label>\r\n                                                        <Input\r\n                                                            id=\"quick-global-price\"\r\n                                                            type=\"text\"\r\n                                                            value={formatCurrencyVND(quickPrice.global)}\r\n                                                            onChange={e =>\r\n                                                                setQuickPrice(prev => ({ ...prev, global: parseCurrencyVND(e.target.value) }))\r\n                                                            }\r\n                                                            size=\"small\"\r\n                                                            sx={{ width: 110, background: \"#fff\" }}\r\n                                                            placeholder=\"VD: 150.000đ\"\r\n                                                        />\r\n                                                    </FormControl>\r\n                                                </Box>\r\n                                            )}\r\n                                        </Box>\r\n                                        <Table\r\n                                            columns={[\r\n                                                { name: \"check\", label: \"\", align: \"center\", width: 40 },\r\n                                                { name: \"name\", label: \"Sản phẩm\", align: \"left\" },\r\n                                                { name: \"size\", label: \"Kích cỡ\", align: \"center\" },\r\n                                                {\r\n                                                    name: \"weight\",\r\n                                                    label: \"Trọng lượng (g)\",\r\n                                                    align: \"right\",\r\n                                                },\r\n                                                {\r\n                                                    name: \"qty\",\r\n                                                    label: \"Số lượng\",\r\n                                                    align: \"right\"\r\n                                                },\r\n                                                {\r\n                                                    name: \"price\",\r\n                                                    label: \"Giá (₫)\",\r\n                                                    align: \"right\"\r\n                                                },\r\n                                                { name: \"image\", label: \"Ảnh\", align: \"center\" },\r\n                                                { name: \"action\", label: \"\", align: \"center\", width: 40 },\r\n                                            ]}\r\n                                            rows={variant.products.map((p, prodIdx) => ({\r\n                                                check: (\r\n                                                    <input\r\n                                                        type=\"checkbox\"\r\n                                                        checked={checkedRows[colorIdx]?.includes(prodIdx) || false}\r\n                                                        onChange={() => handleCheckRow(colorIdx, prodIdx)}\r\n                                                    />\r\n                                                ),\r\n                                                name: (\r\n                                                    <Tooltip title={p.name || \"\"}>\r\n                                                        <Input\r\n                                                            value={p.name}\r\n                                                            size=\"small\"\r\n                                                            readOnly\r\n                                                            sx={{ minWidth: 90 }}\r\n                                                        />\r\n                                                    </Tooltip>\r\n                                                ),\r\n                                                size: (\r\n                                                    <Tooltip\r\n                                                        title={getLabelById(sizeOptions, p.sizeId) || \"\"}\r\n                                                    >\r\n                                                        <Input\r\n                                                            value={getLabelById(sizeOptions, p.sizeId)}\r\n                                                            size=\"small\"\r\n                                                            readOnly\r\n                                                            sx={{ minWidth: 60 }}\r\n                                                        />\r\n                                                    </Tooltip>\r\n                                                ),\r\n                                                weight: (\r\n                                                    <FormControl sx={{ minWidth: 120 }}>\r\n                                                        <Input\r\n                                                            id={`weight-${colorIdx}-${prodIdx}`}\r\n                                                            type=\"text\"\r\n                                                            value={String(p.weight ?? \"\")}\r\n                                                            onChange={(e) =>\r\n                                                                handleVariantValueChange(\r\n                                                                    colorIdx,\r\n                                                                    prodIdx,\r\n                                                                    \"weight\",\r\n                                                                    e.target.value\r\n                                                                )\r\n                                                            }\r\n                                                            size=\"small\"\r\n                                                            sx={{ width: 110, background: \"#fff\" }}\r\n                                                            placeholder=\"VD: 300\"\r\n                                                        />\r\n                                                    </FormControl>\r\n                                                ),\r\n                                                qty: (\r\n                                                    <FormControl sx={{ minWidth: 120 }}>\r\n                                                        <Input\r\n                                                            id={`qty-${colorIdx}-${prodIdx}`}\r\n                                                            type=\"text\"\r\n                                                            value={String(p.qty ?? \"\")}\r\n                                                            onChange={(e) =>\r\n                                                                handleVariantValueChange(\r\n                                                                    colorIdx,\r\n                                                                    prodIdx,\r\n                                                                    \"qty\",\r\n                                                                    e.target.value\r\n                                                                )\r\n                                                            }\r\n                                                            size=\"small\"\r\n                                                            sx={{ width: 110, background: \"#fff\" }}\r\n                                                            placeholder=\"VD: 20\"\r\n                                                        />\r\n                                                    </FormControl>\r\n                                                ),\r\n                                                price: (\r\n                                                    <FormControl sx={{ minWidth: 120 }}>\r\n                                                        <Input\r\n                                                            id={`price-${colorIdx}-${prodIdx}`}\r\n                                                            type=\"text\"\r\n                                                            value={formatCurrencyVND(p.price)}\r\n                                                            onChange={(e) =>\r\n                                                                handleVariantValueChange(\r\n                                                                    colorIdx,\r\n                                                                    prodIdx,\r\n                                                                    \"price\",\r\n                                                                    e.target.value\r\n                                                                )\r\n                                                            }\r\n                                                            size=\"small\"\r\n                                                            sx={{ width: 110, background: \"#fff\" }}\r\n                                                            placeholder=\"VD: 150.000đ\"\r\n                                                        />\r\n                                                    </FormControl>\r\n                                                ),\r\n                                                image: (\r\n                                                    <Box sx={{ display: \"flex\", alignItems: \"center\", gap: 1 }}>\r\n                                                        {Object.values(selectedImages)\r\n                                                            .flat()\r\n                                                            .map((imgId, idx) => {\r\n                                                                const imgObj = imageOptions.find((i) => i.value === imgId);\r\n                                                                if (!imgObj) return null;\r\n                                                                return (\r\n                                                                    <img\r\n                                                                        key={imgId + \"-\" + idx}\r\n                                                                        src={imgObj.url}\r\n                                                                        alt={imgObj.label}\r\n                                                                        width={38}\r\n                                                                        height={38}\r\n                                                                        style={{\r\n                                                                            borderRadius: 5,\r\n                                                                            border: \"1px solid #e3e9f0\",\r\n                                                                            objectFit: \"cover\",\r\n                                                                            background: \"#fafbfc\",\r\n                                                                            marginRight: 4,\r\n                                                                            boxShadow: \"0 2px 8px rgba(25,118,210,0.07)\"\r\n                                                                        }}\r\n                                                                    />\r\n                                                                );\r\n                                                            })}\r\n                                                        <Button\r\n                                                            variant=\"outlined\"\r\n                                                            size=\"small\"\r\n                                                            sx={{ minWidth: 54, ml: 1 }}\r\n                                                            onClick={() => openImageModal(\"all\")}\r\n                                                        >\r\n                                                            <Icon fontSize=\"small\">image</Icon>\r\n                                                        </Button>\r\n                                                    </Box>\r\n                                                ),\r\n                                                action: (\r\n                                                    <Tooltip title=\"Xóa dòng này\">\r\n                                                        <IconButton size=\"small\" sx={{ color: \"#eb5757\" }}>\r\n                                                            <FaTrash />\r\n                                                        </IconButton>\r\n                                                    </Tooltip>\r\n                                                ),\r\n                                            }))}\r\n                                        />\r\n                                    </Card>\r\n                                );\r\n                            })}\r\n                        </SoftBox>\r\n                    </form>\r\n                </Card>\r\n                <Dialog\r\n                    open={showAddProductModal}\r\n                    onClose={() => setShowAddProductModal(false)}\r\n                    maxWidth=\"xs\"\r\n                    fullWidth\r\n                    PaperProps={{ sx: { borderRadius: 4 } }}\r\n                >\r\n                    <DialogTitle sx={{ fontWeight: 700, fontSize: 22, color: \"#1976d2\" }}>\r\n                        Thêm sản phẩm mới nhanh\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <SoftBox mb={2}>\r\n                            <label htmlFor=\"new-product-name\" style={{ fontWeight: \"bold\", marginBottom: 4, display: \"block\" }}>\r\n                                Tên sản phẩm <span style={{ color: \"red\" }}>*</span>\r\n                            </label>\r\n                            <Input\r\n                                id=\"new-product-name\"\r\n                                inputRef={autoFocusRef}\r\n                                fullWidth\r\n                                value={newProductName}\r\n                                onChange={e => setNewProductName(e.target.value)}\r\n                                placeholder=\"Nhập tên sản phẩm mới\"\r\n                                sx={{ background: \"#f6fafd\", borderRadius: 2 }}\r\n                            />\r\n                            {addProductValidate?.newProductName && (\r\n                                <Box sx={{ color: \"red\", fontSize: 13, mt: 0.5 }}>\r\n                                    {addProductValidate.newProductName}\r\n                                </Box>\r\n                            )}\r\n                        </SoftBox>\r\n                        <SoftBox mb={2}>\r\n                            <label htmlFor=\"new-product-category\" style={{ fontWeight: \"bold\", marginBottom: 4, display: \"block\" }}>\r\n                                Danh mục <span style={{ color: \"red\" }}>*</span>\r\n                            </label>\r\n                            <Select\r\n                                inputId=\"new-product-category\"\r\n                                options={categoryOptions}\r\n                                value={categoryOptions.find(o => o.value === newProductCategory) || null}\r\n                                onChange={opt => setNewProductCategory(opt ? opt.value : \"\")}\r\n                                placeholder=\"Chọn danh mục\"\r\n                                styles={selectMenuStyle}\r\n                                isClearable\r\n                            />\r\n                            {addProductValidate?.newProductCategory && (\r\n                                <Box sx={{ color: \"red\", fontSize: 13, mt: 0.5 }}>\r\n                                    {addProductValidate.newProductCategory}\r\n                                </Box>\r\n                            )}\r\n                        </SoftBox>\r\n                        <SoftBox mb={2}>\r\n                            <label htmlFor=\"new-product-country\" style={{ fontWeight: \"bold\", marginBottom: 4, display: \"block\" }}>\r\n                                Xuất xứ <span style={{ color: \"red\" }}>*</span>\r\n                            </label>\r\n                            <Select\r\n                                inputId=\"new-product-country\"\r\n                                options={countryOptions}\r\n                                value={countryOptions.find(o => o.value === newProductCountry) || null}\r\n                                onChange={opt => setNewProductCountry(opt ? opt.value : \"\")}\r\n                                placeholder=\"Chọn quốc gia\"\r\n                                styles={selectMenuStyle}\r\n                                isClearable\r\n                            />\r\n                            {addProductValidate?.newProductCountry && (\r\n                                <Box sx={{ color: \"red\", fontSize: 13, mt: 0.5 }}>\r\n                                    {addProductValidate.newProductCountry}\r\n                                </Box>\r\n                            )}\r\n                        </SoftBox>\r\n                        <SoftBox mb={2}>\r\n                            <label htmlFor=\"new-product-desc\" style={{ fontWeight: \"bold\", marginBottom: 4, display: \"block\" }}>\r\n                                Mô tả\r\n                            </label>\r\n                            <Input\r\n                                id=\"new-product-desc\"\r\n                                fullWidth\r\n                                value={newProductDesc}\r\n                                onChange={e => setNewProductDesc(e.target.value)}\r\n                                placeholder=\"Mô tả sản phẩm (không bắt buộc)\"\r\n                                sx={{ background: \"#f6fafd\", borderRadius: 2 }}\r\n                                multiline\r\n                                rows={3}\r\n                            />\r\n                        </SoftBox>\r\n                        {addError && (\r\n                            <SoftBox color=\"error\" mb={1}>\r\n                                {addError}\r\n                            </SoftBox>\r\n                        )}\r\n                        {addSuccess && (\r\n                            <SoftBox color=\"success\" mb={1}>\r\n                                {addSuccess}\r\n                            </SoftBox>\r\n                        )}\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"outlined\" onClick={() => setShowAddProductModal(false)}>\r\n                            Đóng\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"info\"\r\n                            onClick={handleAddNewProduct}\r\n                            disabled={addProductLoading}\r\n                        >\r\n                            {addProductLoading && (\r\n                                <CircularProgress size={18} color=\"inherit\" sx={{ mr: 1 }} />\r\n                            )}\r\n                            Thêm sản phẩm\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={showImageModal}\r\n                    onClose={closeImageModal}\r\n                    maxWidth=\"md\"\r\n                    fullWidth\r\n                    PaperProps={{\r\n                        sx: { borderRadius: 4 }\r\n                    }}\r\n                >\r\n                    <DialogTitle sx={{ fontWeight: 700, fontSize: 22, color: \"#1976d2\" }}>\r\n                        Chọn ảnh cho màu {getLabelById(colorOptions, modalColor)}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <SoftBox mb={2} fontWeight=\"bold\">\r\n                            Danh sách ảnh đã chọn\r\n                        </SoftBox>\r\n                        <SoftBox\r\n                            display=\"flex\"\r\n                            alignItems=\"center\"\r\n                            gap={2}\r\n                            flexWrap=\"wrap\"\r\n                            style={{\r\n                                minHeight: 100,\r\n                                border: \"1px dashed #d5d5d5\",\r\n                                borderRadius: 8,\r\n                                width: \"100%\",\r\n                                padding: 6,\r\n                                background: \"#f9fafc\",\r\n                            }}\r\n                        >\r\n                            {tempImages.length === 0 ? (\r\n                                <SoftBox textAlign=\"center\" color=\"secondary\" width=\"100%\">\r\n                                    <img\r\n                                        src=\"https://cdn-icons-png.flaticon.com/512/4076/4076549.png\"\r\n                                        alt=\"no-img\"\r\n                                        style={{ width: 48, opacity: 0.5 }}\r\n                                    />\r\n                                    <div style={{ fontSize: 14, opacity: 0.7 }}>No Data Found</div>\r\n                                </SoftBox>\r\n                            ) : (\r\n                                tempImages.map((id) => {\r\n                                    const img = imageOptions.find((i) => i.value === id);\r\n                                    if (!img) return null;\r\n                                    return (\r\n                                        <SoftBox\r\n                                            key={id}\r\n                                            sx={{\r\n                                                border: \"1px solid #ddd\",\r\n                                                borderRadius: 2,\r\n                                                p: 0.5,\r\n                                                width: 90,\r\n                                                height: 80,\r\n                                                display: \"flex\",\r\n                                                flexDirection: \"column\",\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\",\r\n                                                background: \"#fafaff\",\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                src={img.url}\r\n                                                alt={img.label}\r\n                                                style={{\r\n                                                    width: 70,\r\n                                                    height: 50,\r\n                                                    objectFit: \"cover\",\r\n                                                    borderRadius: 4,\r\n                                                }}\r\n                                            />\r\n                                            <div style={{ fontSize: 12, textAlign: \"center\" }}>\r\n                                                {img.label}\r\n                                            </div>\r\n                                        </SoftBox>\r\n                                    );\r\n                                })\r\n                            )}\r\n                        </SoftBox>\r\n                        <SoftBox fontWeight=\"bold\" mt={4} mb={2}>\r\n                            Danh sách ảnh từ hệ thống\r\n                        </SoftBox>\r\n                        <SoftBox display=\"flex\" flexWrap=\"wrap\" gap={2}>\r\n                            {imageOptions.length === 0 ? (\r\n                                <SoftBox textAlign=\"center\" color=\"secondary\" width=\"100%\">\r\n                                    <img\r\n                                        src=\"https://cdn-icons-png.flaticon.com/512/4076/4076549.png\"\r\n                                        alt=\"no-img\"\r\n                                        style={{ width: 48, opacity: 0.5 }}\r\n                                    />\r\n                                    <div style={{ fontSize: 14, opacity: 0.7 }}>No Data Found</div>\r\n                                </SoftBox>\r\n                            ) : (\r\n                                imageOptions.map((img) => (\r\n                                    <SoftBox\r\n                                        key={img.value}\r\n                                        sx={{\r\n                                            border: tempImages.includes(img.value)\r\n                                                ? \"2px solid orange\"\r\n                                                : \"1px dashed #bbb\",\r\n                                            borderRadius: 2,\r\n                                            p: 0.5,\r\n                                            position: \"relative\",\r\n                                            width: 120,\r\n                                            height: 110,\r\n                                            display: \"flex\",\r\n                                            flexDirection: \"column\",\r\n                                            alignItems: \"center\",\r\n                                            justifyContent: \"center\",\r\n                                            cursor: \"pointer\",\r\n                                            background: \"#fff\",\r\n                                            transition: \"box-shadow 0.2s, border 0.2s\",\r\n                                            boxShadow: tempImages.includes(img.value)\r\n                                                ? \"0 2px 8px rgba(255,165,0,0.15)\"\r\n                                                : \"none\",\r\n                                        }}\r\n                                        onClick={() => toggleTempImage(img.value)}\r\n                                    >\r\n                                        <input\r\n                                            type=\"checkbox\"\r\n                                            checked={tempImages.includes(img.value)}\r\n                                            readOnly\r\n                                            style={{\r\n                                                position: \"absolute\",\r\n                                                left: 2,\r\n                                                top: 2,\r\n                                                zIndex: 2,\r\n                                            }}\r\n                                        />\r\n                                        <img\r\n                                            src={img.url}\r\n                                            alt={img.label}\r\n                                            style={{\r\n                                                width: 100,\r\n                                                height: 80,\r\n                                                objectFit: \"cover\",\r\n                                                borderRadius: 4,\r\n                                            }}\r\n                                        />\r\n                                        <div style={{ fontSize: 14, marginTop: 4 }}>\r\n                                            {img.label}\r\n                                        </div>\r\n                                    </SoftBox>\r\n                                ))\r\n                            )}\r\n                        </SoftBox>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button variant=\"outlined\" onClick={closeImageModal} sx={{ minWidth: 110 }}>\r\n                            Đóng\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"info\"\r\n                            onClick={handleSaveImages}\r\n                            disabled={!tempImages.length}\r\n                            sx={{ minWidth: 120, fontWeight: 600 }}\r\n                        >\r\n                            Lưu chọn ảnh\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </SoftBox>\r\n            <ToastContainer\r\n                position=\"top-right\"\r\n                autoClose={3000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n            />\r\n            <Footer />\r\n        </DashboardLayout>\r\n    );\r\n}\r\n\r\nexport default ProductForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}