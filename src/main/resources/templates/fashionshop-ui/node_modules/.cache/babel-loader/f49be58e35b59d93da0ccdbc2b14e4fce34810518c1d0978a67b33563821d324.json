{"ast":null,"code":"import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\n/**\r\n * Gửi file ảnh CCCD lên backend, trả về kết quả nhận diện.\r\n * @param {File|Blob} file Ảnh CCCD\r\n * @returns {Promise<any>} Dữ liệu nhận diện, có thể là object hoặc mảng text\r\n */\nexport async function handleCameraCapture(file) {\n  try {\n    toast.info(\"Đang gửi ảnh để nhận diện...\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    const res = await axios.post(\"http://localhost:8080/api/cccd/upload\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    toast.success(\"Đã nhận diện CCCD thành công!\");\n    return res.data;\n  } catch (err) {\n    toast.error(\"Nhận diện thất bại!\");\n    console.error(err);\n    throw err;\n  }\n}\n\n/**\r\n * Parse mảng text từ backend CCCD OCR thành object các trường cần thiết,\r\n * tách riêng xã, huyện, tỉnh từ \"Quê quán / Place of origin\".\r\n * @param {string[]} lines Mảng các dòng text nhận diện\r\n * @returns {Object} Object có { canCuocCongDan, hoVaTen, ngaySinh, gioiTinh, tinh, huyen, xa, queQuan }\r\n */\nexport function parseCCCDText(lines) {\n  let result = {};\n  if (!Array.isArray(lines)) return result;\n  let queQuan = \"\";\n  for (let i = 0; i < lines.length; i++) {\n    const line = lines[i];\n\n    // Số CCCD: tìm dòng chứa 'No.:' hoặc 12 số liên tiếp\n    if (!result.canCuocCongDan) {\n      const cccdMatch = line.match(/No\\.:?\\s*([0-9]{12})/i) || line.match(/\\b[0-9]{12}\\b/);\n      if (cccdMatch) {\n        result.canCuocCongDan = (cccdMatch[1] || cccdMatch[0]).trim();\n      }\n    }\n\n    // Họ tên: dòng tiếp sau 'Họ và tên' hoặc 'Full name'\n    if (!result.hoVaTen && (line.toLowerCase().includes(\"họ và tên\") || line.toLowerCase().includes(\"họ tên\") || line.toLowerCase().includes(\"full name\"))) {\n      if (i + 1 < lines.length) {\n        let nameCandidate = lines[i + 1].trim();\n        if (nameCandidate && !nameCandidate.includes(\":\") && /^[A-ZÀÁẢÃẠĂẮẰẲẴẶÂẦẤẨẪẬĐÈÉẺẼẸÊỀẾỂỄỆÌÍỈĨỊÒÓỎÕỌÔỒỐỔỖỘƠỜỚỞỠỢÙÚỦŨỤƯỪỨỬỮỰỲÝỶỸỴ\\s']+$/i.test(nameCandidate) && nameCandidate.length > 3) {\n          result.hoVaTen = nameCandidate;\n        }\n      }\n    }\n\n    // Ngày sinh\n    if (!result.ngaySinh && (line.toLowerCase().includes(\"ngày sinh\") || line.toLowerCase().includes(\"date of birth\"))) {\n      let date = line.match(/(\\d{2})[\\/\\-](\\d{2})[\\/\\-](\\d{4})/);\n      if (date) {\n        let [day, month, year] = date[0].split(/[\\/\\-]/);\n        if (year && year.length === 4) {\n          result.ngaySinh = `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\n        }\n      }\n    }\n\n    // Giới tính\n    if (!result.gioiTinh && (line.toLowerCase().includes(\"giới tính\") || line.toLowerCase().includes(\"sex\"))) {\n      if (line.toLowerCase().includes(\"nam\")) result.gioiTinh = \"Nam\";else if (line.toLowerCase().includes(\"nữ\")) result.gioiTinh = \"Nữ\";else result.gioiTinh = \"\";\n    }\n\n    // Quê quán (Place of origin) lấy dòng tiếp theo\n    if (!queQuan && (line.toLowerCase().includes(\"quê quán\") || line.toLowerCase().includes(\"place of origin\"))) {\n      if (i + 1 < lines.length) {\n        queQuan = lines[i + 1].trim();\n      }\n    }\n  }\n\n  // Tách tỉnh/huyện/xã từ quê quán\n  if (queQuan) {\n    const parts = queQuan.split(\",\").map(s => s.trim());\n    if (parts.length >= 3) {\n      result.xa = parts[0];\n      result.huyen = parts[1];\n      result.tinh = parts.slice(2).join(\", \");\n    } else if (parts.length === 2) {\n      result.huyen = parts[0];\n      result.tinh = parts[1];\n    } else if (parts.length === 1) {\n      result.tinh = parts[0];\n    }\n    result.queQuan = queQuan;\n  }\n  return result;\n}","map":{"version":3,"names":["axios","toast","handleCameraCapture","file","info","formData","FormData","append","res","post","headers","success","data","err","error","console","parseCCCDText","lines","result","Array","isArray","queQuan","i","length","line","canCuocCongDan","cccdMatch","match","trim","hoVaTen","toLowerCase","includes","nameCandidate","test","ngaySinh","date","day","month","year","split","padStart","gioiTinh","parts","map","s","xa","huyen","tinh","slice","join"],"sources":["D:/fashion-shirt-shop/DATN/src/main/resources/templates/fashionshop-ui/src/layouts/nhanvien/component/handleCameraCapture.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n/**\r\n * Gửi file ảnh CCCD lên backend, trả về kết quả nhận diện.\r\n * @param {File|Blob} file Ảnh CCCD\r\n * @returns {Promise<any>} Dữ liệu nhận diện, có thể là object hoặc mảng text\r\n */\r\nexport async function handleCameraCapture(file) {\r\n    try {\r\n        toast.info(\"Đang gửi ảnh để nhận diện...\");\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n\r\n        const res = await axios.post(\"http://localhost:8080/api/cccd/upload\", formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        });\r\n\r\n        toast.success(\"Đã nhận diện CCCD thành công!\");\r\n        return res.data;\r\n    } catch (err) {\r\n        toast.error(\"Nhận diện thất bại!\");\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n}\r\n\r\n/**\r\n * Parse mảng text từ backend CCCD OCR thành object các trường cần thiết,\r\n * tách riêng xã, huyện, tỉnh từ \"Quê quán / Place of origin\".\r\n * @param {string[]} lines Mảng các dòng text nhận diện\r\n * @returns {Object} Object có { canCuocCongDan, hoVaTen, ngaySinh, gioiTinh, tinh, huyen, xa, queQuan }\r\n */\r\nexport function parseCCCDText(lines) {\r\n    let result = {};\r\n    if (!Array.isArray(lines)) return result;\r\n\r\n    let queQuan = \"\";\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const line = lines[i];\r\n\r\n        // Số CCCD: tìm dòng chứa 'No.:' hoặc 12 số liên tiếp\r\n        if (!result.canCuocCongDan) {\r\n            const cccdMatch = line.match(/No\\.:?\\s*([0-9]{12})/i) || line.match(/\\b[0-9]{12}\\b/);\r\n            if (cccdMatch) {\r\n                result.canCuocCongDan = (cccdMatch[1] || cccdMatch[0]).trim();\r\n            }\r\n        }\r\n\r\n        // Họ tên: dòng tiếp sau 'Họ và tên' hoặc 'Full name'\r\n        if (\r\n            !result.hoVaTen &&\r\n            (line.toLowerCase().includes(\"họ và tên\") ||\r\n                line.toLowerCase().includes(\"họ tên\") ||\r\n                line.toLowerCase().includes(\"full name\"))\r\n        ) {\r\n            if (i + 1 < lines.length) {\r\n                let nameCandidate = lines[i + 1].trim();\r\n                if (\r\n                    nameCandidate &&\r\n                    !nameCandidate.includes(\":\") &&\r\n                    /^[A-ZÀÁẢÃẠĂẮẰẲẴẶÂẦẤẨẪẬĐÈÉẺẼẸÊỀẾỂỄỆÌÍỈĨỊÒÓỎÕỌÔỒỐỔỖỘƠỜỚỞỠỢÙÚỦŨỤƯỪỨỬỮỰỲÝỶỸỴ\\s']+$/i.test(nameCandidate) &&\r\n                    nameCandidate.length > 3\r\n                ) {\r\n                    result.hoVaTen = nameCandidate;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Ngày sinh\r\n        if (\r\n            !result.ngaySinh &&\r\n            (line.toLowerCase().includes(\"ngày sinh\") || line.toLowerCase().includes(\"date of birth\"))\r\n        ) {\r\n            let date = line.match(/(\\d{2})[\\/\\-](\\d{2})[\\/\\-](\\d{4})/);\r\n            if (date) {\r\n                let [day, month, year] = date[0].split(/[\\/\\-]/);\r\n                if (year && year.length === 4) {\r\n                    result.ngaySinh = `${year}-${month.padStart(2, \"0\")}-${day.padStart(2, \"0\")}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Giới tính\r\n        if (!result.gioiTinh && (line.toLowerCase().includes(\"giới tính\") || line.toLowerCase().includes(\"sex\"))) {\r\n            if (line.toLowerCase().includes(\"nam\")) result.gioiTinh = \"Nam\";\r\n            else if (line.toLowerCase().includes(\"nữ\")) result.gioiTinh = \"Nữ\";\r\n            else result.gioiTinh = \"\";\r\n        }\r\n\r\n        // Quê quán (Place of origin) lấy dòng tiếp theo\r\n        if (\r\n            !queQuan &&\r\n            (line.toLowerCase().includes(\"quê quán\") || line.toLowerCase().includes(\"place of origin\"))\r\n        ) {\r\n            if (i + 1 < lines.length) {\r\n                queQuan = lines[i + 1].trim();\r\n            }\r\n        }\r\n    }\r\n\r\n    // Tách tỉnh/huyện/xã từ quê quán\r\n    if (queQuan) {\r\n        const parts = queQuan.split(\",\").map(s => s.trim());\r\n        if (parts.length >= 3) {\r\n            result.xa = parts[0];\r\n            result.huyen = parts[1];\r\n            result.tinh = parts.slice(2).join(\", \");\r\n        } else if (parts.length === 2) {\r\n            result.huyen = parts[0];\r\n            result.tinh = parts[1];\r\n        } else if (parts.length === 1) {\r\n            result.tinh = parts[0];\r\n        }\r\n        result.queQuan = queQuan;\r\n    }\r\n\r\n    return result;\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}