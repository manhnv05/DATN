{"ast":null,"code":"import Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\nexport default styled(Button)(({\n  theme,\n  ownerState\n}) => {\n  const {\n    palette,\n    functions,\n    borders\n  } = theme;\n  const {\n    color,\n    variant,\n    size,\n    circular,\n    iconOnly\n  } = ownerState;\n  const {\n    white,\n    dark,\n    text,\n    transparent,\n    gradients\n  } = palette;\n  const {\n    boxShadow,\n    linearGradient,\n    pxToRem,\n    rgba\n  } = functions;\n  const {\n    borderRadius\n  } = borders;\n\n  // styles for the button with variant=\"contained\"\n  const containedStyles = () => {\n    // background color value\n    const backgroundValue = palette[color] ? palette[color].main : white.main;\n\n    // backgroundColor value when button is focused\n    const focusedBackgroundValue = palette[color] ? palette[color].focus : white.focus;\n\n    // boxShadow value\n    const boxShadowValue = palette[color] ? boxShadow([0, 0], [0, 3.2], palette[color].main, 0.5) : boxShadow([0, 0], [0, 3.2], dark.main, 0.5);\n\n    // color value\n    let colorValue = white.main;\n    if (color === \"white\" || !palette[color]) {\n      colorValue = text.main;\n    } else if (color === \"light\") {\n      colorValue = gradients.dark.state;\n    }\n\n    // color value when button is focused\n    let focusedColorValue = white.main;\n    if (color === \"white\") {\n      focusedColorValue = text.main;\n    } else if (color === \"primary\" || color === \"error\" || color === \"dark\") {\n      focusedColorValue = white.main;\n    }\n    return {\n      background: backgroundValue,\n      color: colorValue,\n      \"&:hover\": {\n        backgroundColor: backgroundValue\n      },\n      \"&:focus:not(:hover)\": {\n        backgroundColor: focusedBackgroundValue,\n        boxShadow: boxShadowValue\n      },\n      \"&:disabled\": {\n        backgroundColor: backgroundValue,\n        color: focusedColorValue\n      }\n    };\n  };\n\n  // styles for the button with variant=\"outlined\"\n  const outliedStyles = () => {\n    // background color value\n    const backgroundValue = color === \"white\" ? rgba(white.main, 0.1) : transparent.main;\n\n    // color value\n    const colorValue = palette[color] ? palette[color].main : white.main;\n\n    // boxShadow value\n    const boxShadowValue = palette[color] ? boxShadow([0, 0], [0, 3.2], palette[color].main, 0.5) : boxShadow([0, 0], [0, 3.2], white.main, 0.5);\n\n    // border color value\n    let borderColorValue = palette[color] ? palette[color].main : rgba(white.main, 0.75);\n    if (color === \"white\") {\n      borderColorValue = rgba(white.main, 0.75);\n    }\n    return {\n      background: backgroundValue,\n      color: colorValue,\n      borderColor: borderColorValue,\n      \"&:hover\": {\n        background: transparent.main,\n        borderColor: colorValue\n      },\n      \"&:focus:not(:hover)\": {\n        background: transparent.main,\n        boxShadow: boxShadowValue\n      },\n      \"&:active:not(:hover)\": {\n        backgroundColor: colorValue,\n        color: white.main,\n        opacity: 0.85\n      },\n      \"&:disabled\": {\n        color: colorValue,\n        borderColor: colorValue\n      }\n    };\n  };\n\n  // styles for the button with variant=\"gradient\"\n  const gradientStyles = () => {\n    // background value\n    const backgroundValue = color === \"white\" || !gradients[color] ? white.main : linearGradient(gradients[color].main, gradients[color].state);\n\n    // color value\n    let colorValue = white.main;\n    if (color === \"white\") {\n      colorValue = text.main;\n    } else if (color === \"light\") {\n      colorValue = gradients.dark.state;\n    }\n    return {\n      background: backgroundValue,\n      color: colorValue,\n      \"&:focus:not(:hover)\": {\n        boxShadow: \"none\"\n      },\n      \"&:disabled\": {\n        background: backgroundValue,\n        color: colorValue\n      }\n    };\n  };\n\n  // styles for the button with variant=\"text\"\n  const textStyles = () => {\n    // color value\n    const colorValue = palette[color] ? palette[color].main : white.main;\n\n    // color value when button is focused\n    const focusedColorValue = palette[color] ? palette[color].focus : white.focus;\n    return {\n      color: colorValue,\n      \"&:hover\": {\n        color: focusedColorValue\n      },\n      \"&:focus:not(:hover)\": {\n        color: focusedColorValue\n      }\n    };\n  };\n\n  // styles for the button with circular={true}\n  const circularStyles = () => ({\n    borderRadius: borderRadius.section\n  });\n\n  // styles for the button with iconOnly={true}\n  const iconOnlyStyles = () => {\n    // width, height, minWidth and minHeight values\n    let sizeValue = pxToRem(38);\n    if (size === \"small\") {\n      sizeValue = pxToRem(25.4);\n    } else if (size === \"large\") {\n      sizeValue = pxToRem(52);\n    }\n\n    // padding value\n    let paddingValue = `${pxToRem(11)} ${pxToRem(11)} ${pxToRem(10)}`;\n    if (size === \"small\") {\n      paddingValue = pxToRem(4.5);\n    } else if (size === \"large\") {\n      paddingValue = pxToRem(16);\n    }\n    return {\n      width: sizeValue,\n      minWidth: sizeValue,\n      height: sizeValue,\n      minHeight: sizeValue,\n      padding: paddingValue,\n      \"& .material-icons\": {\n        marginTop: 0\n      },\n      \"&:hover, &:focus, &:active\": {\n        transform: \"none\"\n      }\n    };\n  };\n  return {\n    ...(variant === \"contained\" && containedStyles()),\n    ...(variant === \"outlined\" && outliedStyles()),\n    ...(variant === \"gradient\" && gradientStyles()),\n    ...(variant === \"text\" && textStyles()),\n    ...(circular && circularStyles()),\n    ...(iconOnly && iconOnlyStyles())\n  };\n});","map":{"version":3,"names":["Button","styled","theme","ownerState","palette","functions","borders","color","variant","size","circular","iconOnly","white","dark","text","transparent","gradients","boxShadow","linearGradient","pxToRem","rgba","borderRadius","containedStyles","backgroundValue","main","focusedBackgroundValue","focus","boxShadowValue","colorValue","state","focusedColorValue","background","backgroundColor","outliedStyles","borderColorValue","borderColor","opacity","gradientStyles","textStyles","circularStyles","section","iconOnlyStyles","sizeValue","paddingValue","width","minWidth","height","minHeight","padding","marginTop","transform"],"sources":["D:/fashion-shirt-shop/DATN/src/main/resources/templates/fashionshop-ui/src/components/SoftButton/SoftButtonRoot.jsx"],"sourcesContent":["\nimport Button from \"@mui/material/Button\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default styled(Button)(({ theme, ownerState }) => {\n  const { palette, functions, borders } = theme;\n  const { color, variant, size, circular, iconOnly } = ownerState;\n\n  const { white, dark, text, transparent, gradients } = palette;\n  const { boxShadow, linearGradient, pxToRem, rgba } = functions;\n  const { borderRadius } = borders;\n\n  // styles for the button with variant=\"contained\"\n  const containedStyles = () => {\n    // background color value\n    const backgroundValue = palette[color] ? palette[color].main : white.main;\n\n    // backgroundColor value when button is focused\n    const focusedBackgroundValue = palette[color] ? palette[color].focus : white.focus;\n\n    // boxShadow value\n    const boxShadowValue = palette[color]\n      ? boxShadow([0, 0], [0, 3.2], palette[color].main, 0.5)\n      : boxShadow([0, 0], [0, 3.2], dark.main, 0.5);\n\n    // color value\n    let colorValue = white.main;\n\n    if (color === \"white\" || !palette[color]) {\n      colorValue = text.main;\n    } else if (color === \"light\") {\n      colorValue = gradients.dark.state;\n    }\n\n    // color value when button is focused\n    let focusedColorValue = white.main;\n\n    if (color === \"white\") {\n      focusedColorValue = text.main;\n    } else if (color === \"primary\" || color === \"error\" || color === \"dark\") {\n      focusedColorValue = white.main;\n    }\n\n    return {\n      background: backgroundValue,\n      color: colorValue,\n\n      \"&:hover\": {\n        backgroundColor: backgroundValue,\n      },\n\n      \"&:focus:not(:hover)\": {\n        backgroundColor: focusedBackgroundValue,\n        boxShadow: boxShadowValue,\n      },\n\n      \"&:disabled\": {\n        backgroundColor: backgroundValue,\n        color: focusedColorValue,\n      },\n    };\n  };\n\n  // styles for the button with variant=\"outlined\"\n  const outliedStyles = () => {\n    // background color value\n    const backgroundValue = color === \"white\" ? rgba(white.main, 0.1) : transparent.main;\n\n    // color value\n    const colorValue = palette[color] ? palette[color].main : white.main;\n\n    // boxShadow value\n    const boxShadowValue = palette[color]\n      ? boxShadow([0, 0], [0, 3.2], palette[color].main, 0.5)\n      : boxShadow([0, 0], [0, 3.2], white.main, 0.5);\n\n    // border color value\n    let borderColorValue = palette[color] ? palette[color].main : rgba(white.main, 0.75);\n\n    if (color === \"white\") {\n      borderColorValue = rgba(white.main, 0.75);\n    }\n\n    return {\n      background: backgroundValue,\n      color: colorValue,\n      borderColor: borderColorValue,\n\n      \"&:hover\": {\n        background: transparent.main,\n        borderColor: colorValue,\n      },\n\n      \"&:focus:not(:hover)\": {\n        background: transparent.main,\n        boxShadow: boxShadowValue,\n      },\n\n      \"&:active:not(:hover)\": {\n        backgroundColor: colorValue,\n        color: white.main,\n        opacity: 0.85,\n      },\n\n      \"&:disabled\": {\n        color: colorValue,\n        borderColor: colorValue,\n      },\n    };\n  };\n\n  // styles for the button with variant=\"gradient\"\n  const gradientStyles = () => {\n    // background value\n    const backgroundValue =\n      color === \"white\" || !gradients[color]\n        ? white.main\n        : linearGradient(gradients[color].main, gradients[color].state);\n\n    // color value\n    let colorValue = white.main;\n\n    if (color === \"white\") {\n      colorValue = text.main;\n    } else if (color === \"light\") {\n      colorValue = gradients.dark.state;\n    }\n\n    return {\n      background: backgroundValue,\n      color: colorValue,\n\n      \"&:focus:not(:hover)\": {\n        boxShadow: \"none\",\n      },\n\n      \"&:disabled\": {\n        background: backgroundValue,\n        color: colorValue,\n      },\n    };\n  };\n\n  // styles for the button with variant=\"text\"\n  const textStyles = () => {\n    // color value\n    const colorValue = palette[color] ? palette[color].main : white.main;\n\n    // color value when button is focused\n    const focusedColorValue = palette[color] ? palette[color].focus : white.focus;\n\n    return {\n      color: colorValue,\n\n      \"&:hover\": {\n        color: focusedColorValue,\n      },\n\n      \"&:focus:not(:hover)\": {\n        color: focusedColorValue,\n      },\n    };\n  };\n\n  // styles for the button with circular={true}\n  const circularStyles = () => ({\n    borderRadius: borderRadius.section,\n  });\n\n  // styles for the button with iconOnly={true}\n  const iconOnlyStyles = () => {\n    // width, height, minWidth and minHeight values\n    let sizeValue = pxToRem(38);\n\n    if (size === \"small\") {\n      sizeValue = pxToRem(25.4);\n    } else if (size === \"large\") {\n      sizeValue = pxToRem(52);\n    }\n\n    // padding value\n    let paddingValue = `${pxToRem(11)} ${pxToRem(11)} ${pxToRem(10)}`;\n\n    if (size === \"small\") {\n      paddingValue = pxToRem(4.5);\n    } else if (size === \"large\") {\n      paddingValue = pxToRem(16);\n    }\n\n    return {\n      width: sizeValue,\n      minWidth: sizeValue,\n      height: sizeValue,\n      minHeight: sizeValue,\n      padding: paddingValue,\n\n      \"& .material-icons\": {\n        marginTop: 0,\n      },\n\n      \"&:hover, &:focus, &:active\": {\n        transform: \"none\",\n      },\n    };\n  };\n\n  return {\n    ...(variant === \"contained\" && containedStyles()),\n    ...(variant === \"outlined\" && outliedStyles()),\n    ...(variant === \"gradient\" && gradientStyles()),\n    ...(variant === \"text\" && textStyles()),\n    ...(circular && circularStyles()),\n    ...(iconOnly && iconOnlyStyles()),\n  };\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}